{
    "Arc": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Arc1",
            "Arc2",
            "Arc3"
        ],
        "desc": "Abstract class for arc",
        "is_internal": false,
        "methods": [
            "draw_FEMM",
            "intersect_line",
            "is_on_line",
            "split_line",
            "comp_distance",
            "plot"
        ],
        "mother": "Line",
        "name": "Arc",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Arc.csv",
        "properties": []
    },
    "Arc1": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "An arc between two points (defined by a radius)",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_radius",
            "discretize",
            "get_angle",
            "get_begin",
            "get_center",
            "get_end",
            "get_middle",
            "reverse",
            "rotate",
            "scale",
            "split_half",
            "translate"
        ],
        "mother": "Arc",
        "name": "Arc1",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Arc1.csv",
        "properties": [
            {
                "desc": "begin point of the arc",
                "max": "",
                "min": "",
                "name": "begin",
                "type": "complex",
                "unit": "",
                "value": 0
            },
            {
                "desc": "end point of the arc",
                "max": "",
                "min": "",
                "name": "end",
                "type": "complex",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Radius of the arc (can be + or -)",
                "max": "",
                "min": "",
                "name": "radius",
                "type": "float",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Rotation direction of the arc",
                "max": "",
                "min": "",
                "name": "is_trigo_direction",
                "type": "bool",
                "unit": "-",
                "value": 1
            }
        ]
    },
    "Arc2": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "An arc between two points (defined by the begin  point and a center and angle)",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_radius",
            "discretize",
            "get_angle",
            "get_begin",
            "get_center",
            "get_end",
            "get_middle",
            "reverse",
            "rotate",
            "scale",
            "split_half",
            "translate"
        ],
        "mother": "Arc",
        "name": "Arc2",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Arc2.csv",
        "properties": [
            {
                "desc": "begin point of the arc",
                "max": "",
                "min": "",
                "name": "begin",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "center of the arc",
                "max": "",
                "min": "",
                "name": "center",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "opening angle of the arc",
                "max": "6.283185308",
                "min": "-6.283185308",
                "name": "angle",
                "type": "float",
                "unit": "rad",
                "value": 1.57079633
            }
        ]
    },
    "Arc3": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Half circle define by two points",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_radius",
            "discretize",
            "get_angle",
            "get_begin",
            "get_center",
            "get_end",
            "get_middle",
            "reverse",
            "rotate",
            "scale",
            "split_half",
            "translate"
        ],
        "mother": "Arc",
        "name": "Arc3",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Arc3.csv",
        "properties": [
            {
                "desc": "begin point of the arc",
                "max": "",
                "min": "",
                "name": "begin",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "end of the arc",
                "max": "",
                "min": "",
                "name": "end",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Rotation direction of the arc",
                "max": "",
                "min": "",
                "name": "is_trigo_direction",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "Bore": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "BoreFlower",
            "BoreLSRPM",
            "BoreUD"
        ],
        "desc": "Abstract class for Bore shape",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Bore",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Bore.csv",
        "properties": []
    },
    "BoreFlower": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class for Bore flower shape",
        "is_internal": false,
        "methods": [
            "get_bore_line"
        ],
        "mother": "Bore",
        "name": "BoreFlower",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/BoreFlower.csv",
        "properties": [
            {
                "desc": "Number of flower arc",
                "max": "",
                "min": "0",
                "name": "N",
                "type": "int",
                "unit": "-",
                "value": 8
            },
            {
                "desc": "Radius of the flower arc",
                "max": "",
                "min": "0",
                "name": "Rarc",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Angular offset for the arc",
                "max": "",
                "min": "",
                "name": "alpha",
                "type": "float",
                "unit": "rad",
                "value": 0
            }
        ]
    },
    "BoreLSRPM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class for Bore LSRPM",
        "is_internal": false,
        "methods": [
            "get_bore_line"
        ],
        "mother": "Bore",
        "name": "BoreLSRPM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/BoreLSRPM.csv",
        "properties": [
            {
                "desc": "Number of flower arc",
                "max": "",
                "min": "0",
                "name": "N",
                "type": "int",
                "unit": "-",
                "value": 8
            },
            {
                "desc": "Radius of the flower arc",
                "max": "",
                "min": "0",
                "name": "Rarc",
                "type": "float",
                "unit": "m",
                "value": 0.0375
            },
            {
                "desc": "Width of segement",
                "max": "",
                "min": "",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.0035
            },
            {
                "desc": "Angular offset",
                "max": "",
                "min": "",
                "name": "alpha",
                "type": "float",
                "unit": "rad",
                "value": 0
            }
        ]
    },
    "BoreUD": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "User Defined Bore shape",
        "is_internal": false,
        "methods": [
            "get_bore_line"
        ],
        "mother": "Bore",
        "name": "BoreUD",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/BoreUD.csv",
        "properties": [
            {
                "desc": "List of line to draw the full bore",
                "max": "",
                "min": "",
                "name": "line_list",
                "type": "[Line]",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "CellMat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Define the connectivity under matricial format containing one type of element (example: only triangles with 3 nodes). ",
        "is_internal": false,
        "methods": [
            "add_cell",
            "get_connectivity",
            "get_node2cell",
            "is_exist"
        ],
        "mother": "",
        "name": "CellMat",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/CellMat.csv",
        "properties": [
            {
                "desc": "Matrix of connectivity for one element type",
                "max": "",
                "min": "",
                "name": "connectivity",
                "type": "ndarray",
                "unit": "",
                "value": []
            },
            {
                "desc": "Total number of elements",
                "max": "",
                "min": "",
                "name": "nb_cell",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Define the number of node per cell",
                "max": "",
                "min": "",
                "name": "nb_node_per_cell",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Element indices",
                "max": "",
                "min": "",
                "name": "indice",
                "type": "ndarray",
                "unit": "",
                "value": []
            },
            {
                "desc": "Define FEA interpolation",
                "max": "",
                "min": "",
                "name": "interpolation",
                "type": "Interpolation",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Circle": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Circle define by  the center of circle(point_ref), the label and the radius",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_surface",
            "discretize",
            "get_lines",
            "get_patches",
            "rotate",
            "translate",
            "comp_point_ref"
        ],
        "mother": "Surface",
        "name": "Circle",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Circle.csv",
        "properties": [
            {
                "desc": "Radius of the circle",
                "max": "",
                "min": "0",
                "name": "radius",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "center of the Circle",
                "max": "",
                "min": "",
                "name": "center",
                "type": "complex",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Label to set to the lines",
                "max": "",
                "min": "",
                "name": "line_label",
                "type": "str",
                "unit": "",
                "value": ""
            }
        ]
    },
    "CondType11": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "parallel stranded conductor consisting of at least a single rectangular wire",
        "is_internal": false,
        "methods": [
            "comp_surface_active",
            "comp_height",
            "comp_surface",
            "comp_width",
            "plot",
            "plot_schematics"
        ],
        "mother": "Conductor",
        "name": "CondType11",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/CondType11.csv",
        "properties": [
            {
                "desc": "cf schematics, single wire height without insulation [m]",
                "max": "",
                "min": "0",
                "name": "Hwire",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "cf schematics, single wire width without insulation [m]",
                "max": "",
                "min": "0",
                "name": "Wwire",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "cf schematics, stator winding number of preformed wires (strands) in parallel per coil along radial (vertical) direction",
                "max": "",
                "min": "1",
                "name": "Nwppc_rad",
                "type": "int",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "cf schematics, stator winding number of preformed wires (strands) in parallel per coil along tangential (horizontal) direction",
                "max": "",
                "min": "1",
                "name": "Nwppc_tan",
                "type": "int",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "(advanced) cf schematics, winding strand insulation thickness [m]",
                "max": "",
                "min": "0",
                "name": "Wins_wire",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "(advanced) cf schematics, winding coil insulation  thickness [m]",
                "max": "",
                "min": "0",
                "name": "Wins_coil",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "type of winding shape for end winding length calculation\\n0 for hairpin windings\\n1 for normal windings",
                "max": "1",
                "min": "0",
                "name": "type_winding_shape",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "angle of winding overhang hairpin coils [deg]",
                "max": "180",
                "min": "0",
                "name": "alpha_ew",
                "type": "float",
                "unit": "deg",
                "value": 58
            }
        ]
    },
    "CondType12": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "parallel stranded conductor consisting of at least a single round wire",
        "is_internal": false,
        "methods": [
            "check",
            "comp_surface_active",
            "comp_height",
            "comp_surface",
            "comp_width",
            "plot",
            "plot_schematics"
        ],
        "mother": "Conductor",
        "name": "CondType12",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/CondType12.csv",
        "properties": [
            {
                "desc": "cf schematics, single wire diameter without insulation [m]",
                "max": "",
                "min": "0",
                "name": "Wwire",
                "type": "float",
                "unit": "m",
                "value": 0.015
            },
            {
                "desc": "(advanced) cf schematics, winding coil insulation diameter [m]",
                "max": "",
                "min": "0",
                "name": "Wins_cond",
                "type": "float",
                "unit": "m",
                "value": 0.015
            },
            {
                "desc": "cf schematics, winding number of random wires (strands) in parallel per coil",
                "max": "",
                "min": "1",
                "name": "Nwppc",
                "type": "int",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "(advanced) cf schematics, winding strand insulation thickness [m]",
                "max": "",
                "min": "0",
                "name": "Wins_wire",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "winding overhang factor which describes the fact that random round wire end-windings can be more or less compressed (0.5 for small motors, 0.8 for large motors) - can be used to tune the average turn length (relevant if type_cond==1)",
                "max": "",
                "min": "0",
                "name": "Kwoh",
                "type": "float",
                "unit": "-",
                "value": 0.5
            }
        ]
    },
    "CondType21": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "single rectangular conductor \\nhas to be used for LamSquirrelCages's conductor",
        "is_internal": false,
        "methods": [
            "comp_surface_active",
            "comp_height",
            "comp_surface",
            "comp_width",
            "plot"
        ],
        "mother": "Conductor",
        "name": "CondType21",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/CondType21.csv",
        "properties": [
            {
                "desc": "Bar height",
                "max": "",
                "min": "0",
                "name": "Hbar",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Bar width",
                "max": "",
                "min": "0",
                "name": "Wbar",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Width of insulation",
                "max": "",
                "min": "0",
                "name": "Wins",
                "type": "float",
                "unit": "m",
                "value": 0
            }
        ]
    },
    "CondType22": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "conductor with only surface definition without specifc shape nor isolation",
        "is_internal": false,
        "methods": [
            "comp_surface_active",
            "comp_surface"
        ],
        "mother": "Conductor",
        "name": "CondType22",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/CondType22.csv",
        "properties": [
            {
                "desc": "Surface of the Slot",
                "max": "",
                "min": "0",
                "name": "Sbar",
                "type": "float",
                "unit": "m",
                "value": 0.01
            }
        ]
    },
    "Conductor": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "CondType11",
            "CondType12",
            "CondType21",
            "CondType22"
        ],
        "desc": "abstact class for conductors",
        "is_internal": false,
        "methods": [
            "check"
        ],
        "mother": "",
        "name": "Conductor",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Conductor.csv",
        "properties": [
            {
                "desc": "Material of the conductor",
                "max": "",
                "min": "",
                "name": "cond_mat",
                "type": "Material",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Material of the insulation",
                "max": "",
                "min": "",
                "name": "ins_mat",
                "type": "Material",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "DXFImport": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Use a DXF to define a lamination",
        "is_internal": false,
        "methods": [
            "get_surfaces"
        ],
        "mother": "",
        "name": "DXFImport",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/DXFImport.csv",
        "properties": [
            {
                "desc": "Path to the DXF file to import",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "dictionary to assign the surfaces: key=complex reference point coordinate, value=label of the surface",
                "max": "",
                "min": "",
                "name": "surf_dict",
                "type": "dict",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "List of tuple to apply boundary conditions (complex reference point coordinate, is_arc, label of the BC to apply)",
                "max": "",
                "min": "",
                "name": "BC_list",
                "type": "list",
                "unit": "-",
                "value": []
            }
        ]
    },
    "DataKeeper": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "OptiObjective"
        ],
        "desc": "Class for defining data to keep on a multi-simulation",
        "is_internal": false,
        "methods": [
            "as_dict",
            "_set_result"
        ],
        "mother": "",
        "name": "DataKeeper",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/DataKeeper.csv",
        "properties": [
            {
                "desc": "Data name",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Data symbol",
                "max": "",
                "min": "",
                "name": "symbol",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Data unit",
                "max": "",
                "min": "",
                "name": "unit",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Function that takes an Output in argument and return a value",
                "max": "",
                "min": "",
                "name": "keeper",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Function that takes a Simulation in argument and returns a value, this attribute enables to handle errors and to put NaN values in the result matrices",
                "max": "",
                "min": "",
                "name": "error_keeper",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "List containing datakeeper results for each simulation",
                "max": "",
                "min": "",
                "name": "result",
                "type": "list",
                "unit": "-",
                "value": []
            },
            {
                "desc": "Result for the reference simulation",
                "max": "",
                "min": "",
                "name": "result_ref",
                "type": "",
                "unit": "-",
                "value": null
            }
        ]
    },
    "Drive": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "DriveWave"
        ],
        "desc": "Abstract Drive class",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Drive",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Drive.csv",
        "properties": [
            {
                "desc": "Maximum RMS voltage of the Drive",
                "max": "",
                "min": "0",
                "name": "Umax",
                "type": "float",
                "unit": "V",
                "value": 800
            },
            {
                "desc": "Maximum RMS current of the Drive",
                "max": "",
                "min": "0",
                "name": "Imax",
                "type": "float",
                "unit": "A",
                "value": 800
            },
            {
                "desc": "True to generate current waveform, False for voltage",
                "max": "",
                "min": "",
                "name": "is_current",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "DriveWave": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Drive to generate a wave according to an Import object",
        "is_internal": false,
        "methods": [
            "get_wave"
        ],
        "mother": "Drive",
        "name": "DriveWave",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/DriveWave.csv",
        "properties": [
            {
                "desc": "Wave generator",
                "max": "",
                "min": "",
                "name": "wave",
                "type": "Import",
                "unit": "",
                "value": ""
            }
        ]
    },
    "EEC": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "EEC_PMSM",
            "EEC_SCIM"
        ],
        "desc": "Electric module: Equivalent Electrical Circuit abstract class",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "EEC",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/EEC.csv",
        "properties": []
    },
    "EEC_PMSM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Electric module: Electrical Equivalent Circuit",
        "is_internal": false,
        "methods": [
            "comp_parameters",
            "solve_EEC",
            "gen_drive",
            "comp_joule_losses"
        ],
        "mother": "EEC",
        "name": "EEC_PMSM",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/EEC_PMSM.csv",
        "properties": [
            {
                "desc": "Magnetic inductance",
                "max": "",
                "min": "",
                "name": "indmag",
                "type": "IndMag",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Flux Linkage",
                "max": "",
                "min": "",
                "name": "fluxlink",
                "type": "FluxLink",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Parameters of the EEC: computed if empty, or enforced",
                "max": "",
                "min": "",
                "name": "parameters",
                "type": "dict",
                "unit": "-",
                "value": {}
            },
            {
                "desc": "Frequency",
                "max": "",
                "min": "",
                "name": "freq0",
                "type": "float",
                "unit": "Hz",
                "value": null
            },
            {
                "desc": "Drive",
                "max": "",
                "min": "",
                "name": "drive",
                "type": "Drive",
                "unit": "-",
                "value": null
            }
        ]
    },
    "EEC_SCIM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Electric module: Electrical Equivalent Circuit for Squirrel Cage Induction Machine",
        "is_internal": false,
        "methods": [
            "comp_parameters",
            "solve_EEC",
            "gen_drive",
            "comp_joule_losses"
        ],
        "mother": "EEC",
        "name": "EEC_SCIM",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/EEC_SCIM.csv",
        "properties": [
            {
                "desc": "RMS current for parameter estimation",
                "max": "",
                "min": "",
                "name": "I",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Parameters of the EEC: computed if empty, or enforced",
                "max": "",
                "min": "",
                "name": "parameters",
                "type": "dict",
                "unit": "-",
                "value": {}
            },
            {
                "desc": "True to compute only on one angle periodicity (use periodicities defined in output.mag.Angle)",
                "max": "",
                "min": "",
                "name": "is_periodicity_a",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "To run FEMM in parallel (the parallelization is on the time loop)",
                "max": "",
                "min": "",
                "name": "nb_worker",
                "type": "int",
                "unit": "",
                "value": null
            },
            {
                "desc": "Rotor speed",
                "max": "",
                "min": "",
                "name": "N0",
                "type": "float",
                "unit": "rpm",
                "value": null
            },
            {
                "desc": "electrical frequency",
                "max": "",
                "min": "",
                "name": "felec",
                "type": "float",
                "unit": "Hz",
                "value": null
            },
            {
                "desc": "Time discretization",
                "max": "",
                "min": "1",
                "name": "Nt_tot",
                "type": "int",
                "unit": "-",
                "value": 32
            },
            {
                "desc": "Number of rotor revolution (to compute the final time)",
                "max": "",
                "min": "0",
                "name": "Nrev",
                "type": "float",
                "unit": "-",
                "value": 1
            }
        ]
    },
    "Electrical": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Electric module object for electrical equivalent circuit simulation",
        "is_internal": false,
        "methods": [
            "run",
            "comp_power",
            "comp_torque"
        ],
        "mother": "",
        "name": "Electrical",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Electrical.csv",
        "properties": [
            {
                "desc": "Electrical Equivalent Circuit",
                "max": "",
                "min": "",
                "name": "eec",
                "type": "EEC",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Electrical"
            }
        ]
    },
    "Elmer": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ElmerResults",
            "ElmerResultsVTU",
            "Section",
            "SolverInputFile"
        ],
        "desc": "Abstract parent class for all Elmer related convienence classes",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Elmer",
        "package": "Elmer",
        "path": "pyleecan/Generator/ClassesRef/Elmer/Elmer.csv",
        "properties": [
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Elmer"
            }
        ]
    },
    "ElmerResults": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to get 'SaveScalars' and 'SaveLine' data",
        "is_internal": false,
        "methods": [
            "load_data",
            "load_columns",
            "get_data"
        ],
        "mother": "Elmer",
        "name": "ElmerResults",
        "package": "Elmer",
        "path": "pyleecan/Generator/ClassesRef/Elmer/ElmerResults.csv",
        "properties": [
            {
                "desc": "Dict with simulation results",
                "max": "",
                "min": "",
                "name": "data",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Filename of the results data file",
                "max": "",
                "min": "",
                "name": "file",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "List integers (starting with 1) of columns to load. If usecols is not set all columns are loaded.",
                "max": "",
                "min": "",
                "name": "usecols",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "List of columns data names",
                "max": "",
                "min": "",
                "name": "columns",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "Determin if data are 'SaveScalars' data, else 'SaveLine' data are assumed",
                "max": "",
                "min": "",
                "name": "is_scalars",
                "type": "bool",
                "unit": "",
                "value": 0
            }
        ]
    },
    "ElmerResultsVTU": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to get Elmer simulation results from a VTU file",
        "is_internal": false,
        "methods": [
            "build_meshsolution"
        ],
        "mother": "Elmer",
        "name": "ElmerResultsVTU",
        "package": "Elmer",
        "path": "pyleecan/Generator/ClassesRef/Elmer/ElmerResultsVTU.csv",
        "properties": [
            {
                "desc": "Label of the resulting meshsolution",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "",
                "value": "ElmerResults"
            },
            {
                "desc": "Filename of the results VTU data file",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Dict containing the data names to store",
                "max": "",
                "min": "",
                "name": "store_dict",
                "type": "dict",
                "unit": "",
                "value": ""
            }
        ]
    },
    "EndWinding": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "EndWindingCirc"
        ],
        "desc": "Abstract Class of the machine's end winding",
        "is_internal": false,
        "methods": [
            "comp_length_endwinding"
        ],
        "mother": "",
        "name": "EndWinding",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/EndWinding.csv",
        "properties": []
    },
    "EndWindingCirc": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class of the machine's end winding assuming a circular shape",
        "is_internal": false,
        "methods": [
            "comp_length_endwinding"
        ],
        "mother": "EndWinding",
        "name": "EndWindingCirc",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/EndWindingCirc.csv",
        "properties": [
            {
                "desc": "effective coil pitch (override) for length calculation",
                "max": "",
                "min": "",
                "name": "coil_pitch",
                "type": "float",
                "unit": "",
                "value": null
            }
        ]
    },
    "FPGNSeg": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Compute N gauss point for segment elements",
        "is_internal": false,
        "methods": [
            "get_gauss_points"
        ],
        "mother": "GaussPoint",
        "name": "FPGNSeg",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/FPGNSeg.csv",
        "properties": [
            {
                "desc": "Nb of gauss point to be used",
                "max": "",
                "min": "",
                "name": "nb_gauss_point",
                "type": "int",
                "unit": "",
                "value": 4
            }
        ]
    },
    "FPGNTri": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store gauss point for triangle elements",
        "is_internal": false,
        "methods": [
            "get_gauss_points"
        ],
        "mother": "GaussPoint",
        "name": "FPGNTri",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/FPGNTri.csv",
        "properties": [
            {
                "desc": "Nb of gauss point to be used",
                "max": "",
                "min": "",
                "name": "nb_gauss_point",
                "type": "int",
                "unit": "",
                "value": 3
            }
        ]
    },
    "FluxLink": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "FluxLinkFEMM"
        ],
        "desc": "Electric module: Flux Linkage",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "FluxLink",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/FluxLink.csv",
        "properties": []
    },
    "FluxLinkFEMM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Electric module: Flux Linkage with FEMM",
        "is_internal": false,
        "methods": [
            "comp_fluxlinkage",
            "solve_FEMM"
        ],
        "mother": "FluxLink",
        "name": "FluxLinkFEMM",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/FluxLinkFEMM.csv",
        "properties": [
            {
                "desc": "To enforce user-defined values for FEMM main parameters ",
                "max": "",
                "min": "",
                "name": "FEMM_dict",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "0 no leakage calculation /  1 calculation using single slot ",
                "max": "1",
                "min": "0",
                "name": "type_calc_leakage",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "0 to desactivate the sliding band",
                "max": "",
                "min": "",
                "name": "is_sliding_band",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "True to take into account the spatial periodicity of the machine",
                "max": "",
                "min": "",
                "name": "is_periodicity_a",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Number of time steps for the FEMM simulation",
                "max": "",
                "min": "",
                "name": "Nt_tot",
                "type": "int",
                "unit": "-",
                "value": 5
            },
            {
                "desc": "global coefficient to adjust geometry fineness in FEMM (0.5 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kgeo_fineness",
                "type": "float",
                "unit": "",
                "value": 0.5
            }
        ]
    },
    "Force": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ForceMT",
            "ForceTensor"
        ],
        "desc": "Forces module abstract object",
        "is_internal": false,
        "methods": [
            "run",
            "comp_axes",
            "comp_AGSF_transfer"
        ],
        "mother": "",
        "name": "Force",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Force.csv",
        "properties": [
            {
                "desc": "True to compute only on one time periodicity (use periodicities defined in output.force.Time). If None, automatically calculated based on Magnetics periodicities.",
                "max": "",
                "min": "",
                "name": "is_periodicity_t",
                "type": "bool",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True to compute only on one angle periodicity (use periodicities defined in output.force.Angle). If None, automatically calculated based on Magnetics periodicities.",
                "max": "",
                "min": "",
                "name": "is_periodicity_a",
                "type": "bool",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True to compute the AGSF transfer from air-gap to stator bore radius.",
                "max": "",
                "min": "",
                "name": "is_agsf_transfer",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Maximum value to apply agsf transfer (to be used with FEA to avoid numerical noise amplification)",
                "max": "",
                "min": "",
                "name": "max_wavenumber_transfer",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "To enforce the value of the radius for AGSF transfer",
                "max": "",
                "min": "",
                "name": "Rsbo_enforced_transfer",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Force"
            }
        ]
    },
    "ForceMT": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Force Maxwell tensor model for radial flux machines",
        "is_internal": false,
        "methods": [
            "comp_force",
            "comp_force_nodal"
        ],
        "mother": "Force",
        "name": "ForceMT",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/ForceMT.csv",
        "properties": []
    },
    "ForceTensor": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Force various tensors (Maxwell, magnetostrictive) model for radial flux machines",
        "is_internal": false,
        "methods": [
            "comp_force",
            "comp_force_nodal",
            "comp_magnetrosctrictive_tensor",
            "element_loop"
        ],
        "mother": "Force",
        "name": "ForceTensor",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/ForceTensor.csv",
        "properties": [
            {
                "desc": "Name of the group selected for magnetic force computation. If None, all the domain is selected.",
                "max": "",
                "min": "",
                "name": "group",
                "type": "str",
                "unit": "-",
                "value": "stator core"
            }
        ]
    },
    "Frame": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "machine frame",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "comp_height_eq",
            "comp_mass",
            "comp_surface",
            "comp_volume",
            "get_length",
            "plot"
        ],
        "mother": "",
        "name": "Frame",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Frame.csv",
        "properties": [
            {
                "desc": "frame length [m]",
                "max": "",
                "min": "0",
                "name": "Lfra",
                "type": "float",
                "unit": "m",
                "value": 0.35
            },
            {
                "desc": "frame internal radius",
                "max": "",
                "min": "0",
                "name": "Rint",
                "type": "float",
                "unit": "m",
                "value": 0.2
            },
            {
                "desc": "Frame external radius",
                "max": "",
                "min": "0",
                "name": "Rext",
                "type": "float",
                "unit": "m",
                "value": 0.2
            },
            {
                "desc": "Frame material",
                "max": "",
                "min": "",
                "name": "mat_type",
                "type": "Material",
                "unit": "",
                "value": ""
            }
        ]
    },
    "GUIOption": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "GUIOption",
        "package": "GUIOption",
        "path": "pyleecan/Generator/ClassesRef/GUI_Option/GUIOption.csv",
        "properties": [
            {
                "desc": "Unit options",
                "max": "",
                "min": "",
                "name": "unit",
                "type": "Unit",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "GaussPoint": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "FPGNSeg",
            "FPGNTri"
        ],
        "desc": "Store set of gauss points",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "GaussPoint",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/GaussPoint.csv",
        "properties": []
    },
    "Hole": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "HoleM50",
            "HoleM51",
            "HoleM52",
            "HoleM53",
            "HoleM54",
            "HoleM57",
            "HoleM58",
            "HoleMLSRPM",
            "HoleMag",
            "HoleUD",
            "VentilationCirc",
            "VentilationPolar",
            "VentilationTrap"
        ],
        "desc": "Holes for lamination (abstract)",
        "is_internal": false,
        "methods": [
            "comp_height",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface",
            "convert_to_UD",
            "get_is_stator",
            "get_magnet_by_id",
            "get_magnet_dict",
            "get_Rbo",
            "get_Rext",
            "has_magnet",
            "plot",
            "set_magnet_by_id"
        ],
        "mother": "",
        "name": "Hole",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/Hole.csv",
        "properties": [
            {
                "desc": "Number of Hole around the circumference",
                "max": "1000",
                "min": "0",
                "name": "Zh",
                "type": "int",
                "unit": "-",
                "value": 36
            },
            {
                "desc": "Material of the void part of the hole (Air in general)",
                "max": "",
                "min": "",
                "name": "mat_void",
                "type": "Material",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Dictionary add an offset to the magnetization direction of the magnets (key=magnet_X, value=angle[rad])",
                "max": "",
                "min": "",
                "name": "magnetization_dict_offset",
                "type": "dict",
                "unit": "-",
                "value": null
            }
        ]
    },
    "HoleM50": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "V shape slot for buried magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_alpha",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface_magnet_id",
            "comp_W5",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM50",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM50.csv",
        "properties": [
            {
                "desc": "Slot depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot opening",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Distance from the lamination Bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Tooth width (at V bottom)",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Additional depth for the magnet",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Distance Magnet to bottom of the V",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Tooth width (at V top)",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Slot top height",
                "max": "",
                "min": "0",
                "name": "H4",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Magnet Width",
                "max": "",
                "min": "0",
                "name": "W4",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "First Magnet",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Second Magnet",
                "max": "",
                "min": "",
                "name": "magnet_1",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleM51": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "3 magnets V hole",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_alpha",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface_magnet_id",
            "comp_width",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM51",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM51.csv",
        "properties": [
            {
                "desc": "Hole depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Distance from the lamination Bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Hole width",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Hole bottom width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Hole angular width",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "magnet_1 position",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "magnet_1 width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "magnet_2 position",
                "max": "",
                "min": "0",
                "name": "W4",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "magnet_2 width",
                "max": "",
                "min": "0",
                "name": "W5",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "magnet_0 position",
                "max": "",
                "min": "0",
                "name": "W6",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "magnet_0 width",
                "max": "",
                "min": "0",
                "name": "W7",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "First Magnet",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Second Magnet",
                "max": "",
                "min": "",
                "name": "magnet_1",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Third Magnet",
                "max": "",
                "min": "",
                "name": "magnet_2",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleM52": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "V shape slot for buried magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_alpha",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface",
            "comp_surface_magnet_id",
            "comp_W1",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM52",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM52.csv",
        "properties": [
            {
                "desc": "Slot depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Magnet height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Additional depth for the magnet",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Magnet of the hole",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleM53": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "V shape slot for buried magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_alpha",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface_magnet_id",
            "comp_W5",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM53",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM53.csv",
        "properties": [
            {
                "desc": "Slot depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Distance from the lamination Bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Tooth width (at V bottom)",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Distance Magnet to bottom of the V",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Additional depth for the magnet",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Magnet Width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Slot angle",
                "max": "",
                "min": "0",
                "name": "W4",
                "type": "float",
                "unit": "rad",
                "value": 0.01
            },
            {
                "desc": "First Magnet",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Second Magnet",
                "max": "",
                "min": "",
                "name": "magnet_1",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleM54": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Arc Hole for SyRM",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface",
            "plot_schematics"
        ],
        "mother": "Hole",
        "name": "HoleM54",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM54.csv",
        "properties": [
            {
                "desc": "Hole depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Hole width",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Hole angular width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.013
            },
            {
                "desc": "Hole radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.02
            }
        ]
    },
    "HoleM57": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "V shape slot for buried magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface_magnet_id",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM57",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM57.csv",
        "properties": [
            {
                "desc": "V angle",
                "max": "3.15",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.2
            },
            {
                "desc": "Distance from the lamination Bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Tooth width (at V bottom)",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Magnet height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Distance Magnet to top of the V",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Tooth width (at V top)",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Magnet Width",
                "max": "",
                "min": "0",
                "name": "W4",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "First Magnet",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Second Magnet",
                "max": "",
                "min": "",
                "name": "magnet_1",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleM58": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "One magnet with circular notches",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_magnetization_dict",
            "comp_radius",
            "comp_surface_magnet_id",
            "has_magnet",
            "plot_schematics",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleM58",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleM58.csv",
        "properties": [
            {
                "desc": "Slot depth",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Distance from the lamination Bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Distance Magnet to side of the notch",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Tooth angular opening width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "rad",
                "value": 0.01
            },
            {
                "desc": "Notch radius",
                "max": "",
                "min": "0",
                "name": "R0",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Magnet",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleMLSRPM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "V shape slot for buried magnet",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "remove_magnet",
            "has_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleMLSRPM",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleMLSRPM.csv",
        "properties": [
            {
                "desc": "Magnet depth",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.0023734787
            },
            {
                "desc": "Magnet top width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.00388
            },
            {
                "desc": "Magnet width angular 1 ",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "rad",
                "value": 0.219911482
            },
            {
                "desc": "Small distance",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.0007
            },
            {
                "desc": "Rounding radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.0003
            },
            {
                "desc": "Radius 2",
                "max": "",
                "min": "",
                "name": "R2",
                "type": "float",
                "unit": "m",
                "value": 0.019327
            },
            {
                "desc": "Radius 3",
                "max": "",
                "min": "",
                "name": "R3",
                "type": "float",
                "unit": "m",
                "value": 0.0165
            },
            {
                "desc": "Magnet of the hole",
                "max": "",
                "min": "",
                "name": "magnet_0",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "HoleMag": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "HoleM50",
            "HoleM51",
            "HoleM52",
            "HoleM53",
            "HoleM57",
            "HoleM58",
            "HoleMLSRPM",
            "HoleUD"
        ],
        "desc": "Hole with magnets for lamination (abstract)",
        "is_internal": false,
        "methods": [
            "comp_mass_magnet_id",
            "comp_mass_magnets",
            "comp_surface_magnets",
            "comp_volume_magnets",
            "get_magnet_list",
            "has_magnet"
        ],
        "mother": "Hole",
        "name": "HoleMag",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleMag.csv",
        "properties": []
    },
    "HoleUD": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "User defined hole from list of surface",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_surface_magnet_id",
            "has_magnet",
            "remove_magnet"
        ],
        "mother": "HoleMag",
        "name": "HoleUD",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/HoleUD.csv",
        "properties": [
            {
                "desc": "List of surface to draw the Hole. Surfaces must be ordered in trigo order, label must contain HoleMagnet for Magnet and Hole for holes",
                "max": "",
                "min": "",
                "name": "surf_list",
                "type": "[Surface]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "dictionary with the magnet for the Hole (None to remove magnet, key should be magnet_X)",
                "max": "",
                "min": "",
                "name": "magnet_dict",
                "type": "{Magnet}",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Import": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ImportGenMatrixSin",
            "ImportGenPWM",
            "ImportGenToothSaw",
            "ImportGenVectLin",
            "ImportGenVectSin",
            "ImportMatlab",
            "ImportMatrix",
            "ImportMatrixVal",
            "ImportMatrixXls",
            "ImportMeshMat",
            "ImportMeshUnv"
        ],
        "desc": "Abstract class for Data Import/Generation",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Import",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/Import.csv",
        "properties": []
    },
    "ImportData": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for Data Import/Generation",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "",
        "name": "ImportData",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportData.csv",
        "properties": [
            {
                "desc": "List of axes of the data",
                "max": "",
                "min": "",
                "name": "axes",
                "type": "[ImportData]",
                "unit": "-",
                "value": []
            },
            {
                "desc": "Field (Import object)",
                "max": "",
                "min": "",
                "name": "field",
                "type": "Import",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Unit of the field",
                "max": "",
                "min": "",
                "name": "unit",
                "type": "str",
                "unit": "-",
                "value": "SI"
            },
            {
                "desc": "Name of the field",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Symbol of the field",
                "max": "",
                "min": "",
                "name": "symbol",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Dict of normalizations",
                "max": "",
                "min": "",
                "name": "normalizations",
                "type": "dict",
                "unit": "-",
                "value": {}
            },
            {
                "desc": "Dict of symmetries",
                "max": "",
                "min": "",
                "name": "symmetries",
                "type": "dict",
                "unit": "-",
                "value": {}
            }
        ]
    },
    "ImportGenMatrixSin": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "To generate a Sinus matrix",
        "is_internal": false,
        "methods": [
            "get_data",
            "init_vector"
        ],
        "mother": "ImportMatrix",
        "name": "ImportGenMatrixSin",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportGenMatrixSin.csv",
        "properties": [
            {
                "desc": "List of sinus vector to generate the matrix lines",
                "max": "",
                "min": "",
                "name": "sin_list",
                "type": "[ImportGenVectSin]",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ImportGenPWM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "To generate a PWM voltage matrix",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportGenPWM",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportGenPWM.csv",
        "properties": [
            {
                "desc": "sample frequency",
                "max": "",
                "min": "0",
                "name": "fs",
                "type": "float",
                "unit": "Hz",
                "value": 96000
            },
            {
                "desc": "duration",
                "max": "",
                "min": "0",
                "name": "duration",
                "type": "int",
                "unit": "s",
                "value": 10
            },
            {
                "desc": "fundamental frequency",
                "max": "",
                "min": "0",
                "name": "f",
                "type": "float",
                "unit": "Hz",
                "value": 50
            },
            {
                "desc": "maximal fundamental frequency",
                "max": "",
                "min": "0",
                "name": "fmax",
                "type": "float",
                "unit": "Hz",
                "value": 0
            },
            {
                "desc": "speed mode: 0: Fixed speed, 1: Variable speed",
                "max": "",
                "min": "0",
                "name": "fmode",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "switch mode: 0:Fixed fswi, 1:Variable fswi",
                "max": "",
                "min": "",
                "name": "fswimode",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "switching frequency",
                "max": "",
                "min": "",
                "name": "fswi",
                "type": "float",
                "unit": "Hz",
                "value": 1000
            },
            {
                "desc": "maximal switching frequency",
                "max": "",
                "min": "",
                "name": "fswi_max",
                "type": "int",
                "unit": "Hz",
                "value": 3000
            },
            {
                "desc": "0: GDPWM 1: DPWMMIN 2: DPWMMAX 3: DPWM0 4: DPWM1 5: DPWM2 6: DPWM3 7: SVPWM 8: SPWM",
                "max": "",
                "min": "",
                "name": "typePWM",
                "type": "int",
                "unit": "",
                "value": 8
            },
            {
                "desc": "DC BUS voltage",
                "max": "",
                "min": "",
                "name": "Vdc1",
                "type": "float",
                "unit": "V",
                "value": 2
            },
            {
                "desc": "reference voltage",
                "max": "",
                "min": "",
                "name": "U0",
                "type": "float",
                "unit": "V",
                "value": 1
            },
            {
                "desc": "1: forward toothsaw carrier 2: backwards toothsaw carrier 3: toothsaw carrier else: symetrical toothsaw carrier",
                "max": "",
                "min": "",
                "name": "type_carrier",
                "type": "int",
                "unit": "",
                "value": 0
            }
        ]
    },
    "ImportGenToothSaw": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "To generate a toothsaw vector",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportGenToothSaw",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportGenToothSaw.csv",
        "properties": [
            {
                "desc": "0: Forward toothsaw, 1: Backwards toothsaw, 2: symmetrical toothsaw",
                "max": "2",
                "min": "0",
                "name": "type_signal",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Frequency of the signal to generate",
                "max": "",
                "min": "0",
                "name": "f",
                "type": "float",
                "unit": "Hz",
                "value": 100
            },
            {
                "desc": "Amplitude of the signal to generate",
                "max": "",
                "min": "",
                "name": "A",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Length of the signal to generate",
                "max": "",
                "min": "0",
                "name": "N",
                "type": "int",
                "unit": "-",
                "value": 1024
            },
            {
                "desc": "End time of the signal generation",
                "max": "",
                "min": "0",
                "name": "Tf",
                "type": "float",
                "unit": "s",
                "value": 1
            },
            {
                "desc": "Time offset",
                "max": "",
                "min": "",
                "name": "Dt",
                "type": "float",
                "unit": "s",
                "value": 0
            }
        ]
    },
    "ImportGenVectLin": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "To generate a Linspace vector",
        "is_internal": false,
        "methods": [
            "check",
            "comp_step",
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportGenVectLin",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportGenVectLin.csv",
        "properties": [
            {
                "desc": "Begin point of the linspace",
                "max": "",
                "min": "",
                "name": "start",
                "type": "float",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "End point of the linspace",
                "max": "",
                "min": "",
                "name": "stop",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Number of value in the linspace",
                "max": "",
                "min": "",
                "name": "num",
                "type": "float",
                "unit": "-",
                "value": 100
            },
            {
                "desc": "If True, stop is the last sample. Otherwise, it is not included",
                "max": "",
                "min": "",
                "name": "endpoint",
                "type": "bool",
                "unit": "-",
                "value": 1
            }
        ]
    },
    "ImportGenVectSin": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "To generate a Sinus vector",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportGenVectSin",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportGenVectSin.csv",
        "properties": [
            {
                "desc": "Frequency of the sinus to generate",
                "max": "",
                "min": "0",
                "name": "f",
                "type": "float",
                "unit": "Hz",
                "value": 100
            },
            {
                "desc": "Amplitude of the sinus to generate",
                "max": "",
                "min": "",
                "name": "A",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Phase of the sinus to generate",
                "max": "6.29",
                "min": "-6.29",
                "name": "Phi",
                "type": "float",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Length of the vector to generate",
                "max": "",
                "min": "0",
                "name": "N",
                "type": "int",
                "unit": "-",
                "value": 1024
            },
            {
                "desc": "End time of the sinus generation",
                "max": "",
                "min": "0",
                "name": "Tf",
                "type": "float",
                "unit": "s",
                "value": 1
            }
        ]
    },
    "ImportMatlab": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Import the data from a mat file",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportMatlab",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMatlab.csv",
        "properties": [
            {
                "desc": "Path of the file to load",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Name of the variable to load",
                "max": "",
                "min": "",
                "name": "var_name",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ImportMatrix": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ImportGenMatrixSin",
            "ImportGenPWM",
            "ImportGenToothSaw",
            "ImportGenVectLin",
            "ImportGenVectSin",
            "ImportMatlab",
            "ImportMatrixVal",
            "ImportMatrixXls"
        ],
        "desc": "Abstract class to Import/Generate 1D or D matrix",
        "is_internal": false,
        "methods": [
            "edit_matrix"
        ],
        "mother": "Import",
        "name": "ImportMatrix",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMatrix.csv",
        "properties": [
            {
                "desc": "1 to transpose the Imported/Generated matrix",
                "max": "",
                "min": "",
                "name": "is_transpose",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "ImportMatrixVal": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Import directly the value from the object",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportMatrixVal",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMatrixVal.csv",
        "properties": [
            {
                "desc": "The matrix to return",
                "max": "",
                "min": "",
                "name": "value",
                "type": "ndarray",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ImportMatrixXls": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Import the data from an xls file",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "ImportMatrix",
        "name": "ImportMatrixXls",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMatrixXls.csv",
        "properties": [
            {
                "desc": "Path of the file to load",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Name of the sheet to load",
                "max": "",
                "min": "",
                "name": "sheet",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "To skip some rows in the file (header)",
                "max": "",
                "min": "0",
                "name": "skiprows",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "list of Excel column letters and column ranges (e.g. \"A:E\" or \"A,C,E:F\")",
                "max": "",
                "min": "",
                "name": "usecols",
                "type": "str",
                "unit": "-",
                "value": "None"
            },
            {
                "desc": "To read axes in first line/column",
                "max": "",
                "min": "",
                "name": "axes_colrows",
                "type": "dict",
                "unit": "-",
                "value": null
            },
            {
                "desc": "To read all sheets in a 3D matrix",
                "max": "",
                "min": "",
                "name": "is_allsheets",
                "type": "bool",
                "unit": "-",
                "value": false
            }
        ]
    },
    "ImportMeshMat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Import mesh as meshMat",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "Import",
        "name": "ImportMeshMat",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMeshMat.csv",
        "properties": [
            {
                "desc": "Path of the file to load",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ImportMeshUnv": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Import mesh data from an unv file",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "Import",
        "name": "ImportMeshUnv",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportMeshUnv.csv",
        "properties": [
            {
                "desc": "Path of the file to load",
                "max": "",
                "min": "",
                "name": "file_path",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ImportVectorField": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for Data Import/Generation",
        "is_internal": false,
        "methods": [
            "get_data"
        ],
        "mother": "",
        "name": "ImportVectorField",
        "package": "Import",
        "path": "pyleecan/Generator/ClassesRef/Import/ImportVectorField.csv",
        "properties": [
            {
                "desc": "Dict of components (e.g. {\"radial\": ImportData})",
                "max": "",
                "min": "",
                "name": "components",
                "type": "{ImportData}",
                "unit": "-",
                "value": {}
            },
            {
                "desc": "Name of the vector field",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Symbol of the vector field",
                "max": "",
                "min": "",
                "name": "symbol",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "IndMag": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "IndMagFEMM"
        ],
        "desc": "Electric module: Magnetic Inductance",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "IndMag",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/IndMag.csv",
        "properties": []
    },
    "IndMagFEMM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Electric module: Magnetic Inductance with FEMM",
        "is_internal": false,
        "methods": [
            "comp_inductance",
            "solve_FEMM"
        ],
        "mother": "IndMag",
        "name": "IndMagFEMM",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/IndMagFEMM.csv",
        "properties": [
            {
                "desc": "To enforce user-defined values for FEMM main parameters ",
                "max": "",
                "min": "",
                "name": "FEMM_dict",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "0 no leakage calculation /  1 calculation using single slot ",
                "max": "1",
                "min": "0",
                "name": "type_calc_leakage",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "0 to desactivate the sliding band",
                "max": "",
                "min": "",
                "name": "is_sliding_band",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "True to take into account the spatial periodicity of the machine",
                "max": "",
                "min": "",
                "name": "is_periodicity_a",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Number of time steps for the FEMM simulation",
                "max": "",
                "min": "",
                "name": "Nt_tot",
                "type": "int",
                "unit": "-",
                "value": 5
            },
            {
                "desc": "global coefficient to adjust geometry fineness in FEMM (0.5 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kgeo_fineness",
                "type": "float",
                "unit": "",
                "value": 0.5
            }
        ]
    },
    "Input": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "InputCurrent",
            "InputElec",
            "InputFlux",
            "InputForce"
        ],
        "desc": "Starting data of the simulation",
        "is_internal": false,
        "methods": [
            "gen_input",
            "comp_axes",
            "comp_felec"
        ],
        "mother": "",
        "name": "Input",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Input.csv",
        "properties": [
            {
                "desc": "Electrical time vector (no symmetry) to import",
                "max": "",
                "min": "",
                "name": "time",
                "type": "ImportMatrix",
                "unit": "s",
                "value": null
            },
            {
                "desc": "Electrical position vector (no symmetry) to import",
                "max": "",
                "min": "",
                "name": "angle",
                "type": "ImportMatrix",
                "unit": "rad",
                "value": null
            },
            {
                "desc": "Time discretization",
                "max": "",
                "min": "1",
                "name": "Nt_tot",
                "type": "int",
                "unit": "-",
                "value": 2048
            },
            {
                "desc": "Number of rotor revolution (to compute the final time)",
                "max": "",
                "min": "0",
                "name": "Nrev",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Angular discretization",
                "max": "",
                "min": "1",
                "name": "Na_tot",
                "type": "int",
                "unit": "-",
                "value": 2048
            },
            {
                "desc": "Rotor speed",
                "max": "",
                "min": "",
                "name": "N0",
                "type": "float",
                "unit": "rpm",
                "value": null
            }
        ]
    },
    "InputCurrent": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Input to skip the electrical module and start with the magnetic one",
        "is_internal": false,
        "methods": [
            "gen_input",
            "set_Id_Iq",
            "set_OP_from_array"
        ],
        "mother": "Input",
        "name": "InputCurrent",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/InputCurrent.csv",
        "properties": [
            {
                "desc": "Stator currents as a function of time (each column correspond to one phase) to import",
                "max": "",
                "min": "",
                "name": "Is",
                "type": "ImportMatrix",
                "unit": "A",
                "value": null
            },
            {
                "desc": "Rotor currents as a function of time (each column correspond to one phase) to import",
                "max": "",
                "min": "",
                "name": "Ir",
                "type": "ImportMatrix",
                "unit": "A",
                "value": null
            },
            {
                "desc": "Rotor angular position as a function of time (if None computed according to Nr) to import",
                "max": "",
                "min": "",
                "name": "angle_rotor",
                "type": "Import",
                "unit": "rad",
                "value": null
            },
            {
                "desc": "Rotation direction of the rotor 1 trigo, -1 clockwise",
                "max": "1",
                "min": "-1",
                "name": "rot_dir",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Initial angular position of the rotor at t=0",
                "max": "",
                "min": "",
                "name": "angle_rotor_initial",
                "type": "float",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Theorical Average Electromagnetic torque",
                "max": "",
                "min": "",
                "name": "Tem_av_ref",
                "type": "float",
                "unit": "N.m",
                "value": null
            },
            {
                "desc": "d-axis current RMS magnitude",
                "max": "",
                "min": "",
                "name": "Id_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "q-axis current RMS magnitude",
                "max": "",
                "min": "",
                "name": "Iq_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "electrical frequency",
                "max": "",
                "min": "",
                "name": "felec",
                "type": "float",
                "unit": "Hz",
                "value": null
            }
        ]
    },
    "InputElec": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Input to skip the electrical module and start with the magnetic one",
        "is_internal": false,
        "methods": [
            "gen_input",
            "comp_felec",
            "set_Id_Iq"
        ],
        "mother": "Input",
        "name": "InputElec",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/InputElec.csv",
        "properties": [
            {
                "desc": "Rotation direction of the rotor 1 trigo, -1 clockwise",
                "max": "1",
                "min": "-1",
                "name": "rot_dir",
                "type": "float",
                "unit": "-",
                "value": -1
            },
            {
                "desc": "d-axis current magnitude",
                "max": "",
                "min": "",
                "name": "Id_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "q-axis current magnitude",
                "max": "",
                "min": "",
                "name": "Iq_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "d-axis voltage magnitude",
                "max": "",
                "min": "",
                "name": "Ud_ref",
                "type": "float",
                "unit": "V",
                "value": null
            },
            {
                "desc": "q-axis voltage magnitude",
                "max": "",
                "min": "",
                "name": "Uq_ref",
                "type": "float",
                "unit": "V",
                "value": null
            },
            {
                "desc": "electrical frequency",
                "max": "",
                "min": "",
                "name": "felec",
                "type": "float",
                "unit": "Hz",
                "value": null
            }
        ]
    },
    "InputFlux": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Input to skip the magnetic module and start with the structural one",
        "is_internal": false,
        "methods": [
            "gen_input",
            "comp_felec",
            "comp_axes"
        ],
        "mother": "Input",
        "name": "InputFlux",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/InputFlux.csv",
        "properties": [
            {
                "desc": "Angle periodicity",
                "max": "",
                "min": "",
                "name": "per_a",
                "type": "int",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Time periodicity",
                "max": "",
                "min": "",
                "name": "per_t",
                "type": "int",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "If angle is antiperiodic",
                "max": "",
                "min": "",
                "name": "is_antiper_a",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "If time is antiperiodic",
                "max": "",
                "min": "",
                "name": "is_antiper_t",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "Dict of Import objects or lists for each component of the flux",
                "max": "",
                "min": "",
                "name": "B_dict",
                "type": "dict",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Unit of the flux if not T",
                "max": "",
                "min": "",
                "name": "unit",
                "type": "str",
                "unit": "-",
                "value": "None"
            },
            {
                "desc": "InputCurrent to define Operating Point (not mandatory)",
                "max": "",
                "min": "",
                "name": "OP",
                "type": "Input",
                "unit": "-",
                "value": null
            }
        ]
    },
    "InputForce": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Input to start with the structural one ",
        "is_internal": false,
        "methods": [
            "gen_input"
        ],
        "mother": "Input",
        "name": "InputForce",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/InputForce.csv",
        "properties": [
            {
                "desc": "Magnetic air-gap surface force",
                "max": "",
                "min": "",
                "name": "P",
                "type": "ImportVectorField",
                "unit": "N.m^2",
                "value": null
            }
        ]
    },
    "Interpolation": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store shape functions",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Interpolation",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/Interpolation.csv",
        "properties": [
            {
                "desc": "",
                "max": "",
                "min": "",
                "name": "ref_cell",
                "type": "RefCell",
                "unit": "",
                "value": null
            },
            {
                "desc": "",
                "max": "",
                "min": "",
                "name": "gauss_point",
                "type": "GaussPoint",
                "unit": "",
                "value": null
            },
            {
                "desc": "",
                "max": "",
                "min": "",
                "name": "scalar_product",
                "type": "ScalarProduct",
                "unit": "",
                "value": null
            }
        ]
    },
    "LamHole": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Lamination with Hole with or without magnet or winding",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "comp_height_yoke",
            "comp_masses",
            "comp_surfaces",
            "comp_volumes",
            "get_pole_pair_number",
            "plot",
            "comp_radius_mid_yoke",
            "has_magnet",
            "comp_angle_d_axis",
            "comp_periodicity",
            "set_pole_pair_number"
        ],
        "mother": "Lamination",
        "name": "LamHole",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamHole.csv",
        "properties": [
            {
                "desc": "lamination Hole",
                "max": "",
                "min": "",
                "name": "hole",
                "type": "[Hole]",
                "unit": "",
                "value": ""
            }
        ]
    },
    "LamSlot": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "LamSlotMag",
            "LamSlotWind",
            "LamSquirrelCage",
            "LamSquirrelCageMag"
        ],
        "desc": "Lamination with empty Slot",
        "is_internal": false,
        "methods": [
            "check",
            "comp_radius_mec",
            "comp_surfaces",
            "get_pole_pair_number",
            "plot",
            "comp_height_yoke",
            "get_Zs",
            "comp_radius_mid_yoke",
            "comp_periodicity",
            "get_bore_desc",
            "set_pole_pair_number"
        ],
        "mother": "Lamination",
        "name": "LamSlot",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSlot.csv",
        "properties": [
            {
                "desc": "lamination Slot",
                "max": "",
                "min": "",
                "name": "slot",
                "type": "Slot",
                "unit": "",
                "value": ""
            }
        ]
    },
    "LamSlotMag": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Lamination with Slot for Magnets",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_masses",
            "comp_radius_mec",
            "comp_surfaces",
            "comp_volumes",
            "plot",
            "comp_angle_d_axis",
            "comp_periodicity"
        ],
        "mother": "LamSlot",
        "name": "LamSlotMag",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSlotMag.csv",
        "properties": [
            {
                "desc": "Magnet of the lamination",
                "max": "",
                "min": "",
                "name": "magnet",
                "type": "Magnet",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "LamSlotMulti": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Lamination with list of Slot",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_radius_mec",
            "comp_surfaces",
            "get_pole_pair_number",
            "plot",
            "comp_height_yoke",
            "get_Zs",
            "get_bore_desc"
        ],
        "mother": "Lamination",
        "name": "LamSlotMulti",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSlotMulti.csv",
        "properties": [
            {
                "desc": "List of lamination Slot",
                "max": "",
                "min": "",
                "name": "slot_list",
                "type": "[Slot]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Angular position of the Slots",
                "max": "",
                "min": "",
                "name": "alpha",
                "type": "ndarray",
                "unit": "[rad]",
                "value": ""
            }
        ]
    },
    "LamSlotWind": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "LamSquirrelCage",
            "LamSquirrelCageMag"
        ],
        "desc": "Lamination with Slot filled with winding",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_masses",
            "comp_surfaces",
            "comp_volumes",
            "get_pole_pair_number",
            "get_name_phase",
            "plot",
            "plot_winding",
            "comp_fill_factor",
            "comp_output_geo",
            "get_polar_eq",
            "comp_wind_function",
            "plot_mmf_unit",
            "comp_resistance_wind",
            "comp_angle_d_axis",
            "comp_mmf_unit",
            "comp_rot_dir",
            "comp_lengths_winding",
            "comp_number_phase_eq",
            "comp_periodicity",
            "set_pole_pair_number"
        ],
        "mother": "LamSlot",
        "name": "LamSlotWind",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSlotWind.csv",
        "properties": [
            {
                "desc": "Imposed Slot Fill factor (if None, will be computed according to the winding and the slot)",
                "max": "1",
                "min": "0",
                "name": "Ksfill",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Lamination's Winding",
                "max": "",
                "min": "",
                "name": "winding",
                "type": "Winding",
                "unit": "",
                "value": ""
            }
        ]
    },
    "LamSquirrelCage": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "LamSquirrelCageMag"
        ],
        "desc": "squirrel cages lamination",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_length_ring",
            "plot",
            "comp_number_phase_eq",
            "comp_periodicity",
            "comp_surface_ring",
            "comp_resistance_wind"
        ],
        "mother": "LamSlotWind",
        "name": "LamSquirrelCage",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSquirrelCage.csv",
        "properties": [
            {
                "desc": "short circuit ring section radial height [m]",
                "max": "",
                "min": "0",
                "name": "Hscr",
                "type": "float",
                "unit": "m",
                "value": 0.03
            },
            {
                "desc": "short circuit ring section axial length",
                "max": "",
                "min": "0",
                "name": "Lscr",
                "type": "float",
                "unit": "m",
                "value": 0.015
            },
            {
                "desc": "Material of the Rotor short circuit ring",
                "max": "",
                "min": "",
                "name": "ring_mat",
                "type": "Material",
                "unit": "",
                "value": ""
            }
        ]
    },
    "LamSquirrelCageMag": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Rotor lamination for LSPM",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_surfaces",
            "plot",
            "get_pole_pair_number",
            "set_pole_pair_number"
        ],
        "mother": "LamSquirrelCage",
        "name": "LamSquirrelCageMag",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/LamSquirrelCageMag.csv",
        "properties": [
            {
                "desc": "lamination Hole",
                "max": "",
                "min": "",
                "name": "hole",
                "type": "[Hole]",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Lamination": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "LamHole",
            "LamSlot",
            "LamSlotMag",
            "LamSlotMulti",
            "LamSlotWind",
            "LamSquirrelCage",
            "LamSquirrelCageMag"
        ],
        "desc": "abstract class for lamination",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_length",
            "comp_masses",
            "comp_radius_mec",
            "comp_surface_axial_vent",
            "comp_surfaces",
            "comp_volumes",
            "get_bore_line",
            "get_Rbo",
            "get_Ryoke",
            "get_name_phase",
            "plot",
            "comp_output_geo",
            "get_polar_eq",
            "is_outwards",
            "comp_height_yoke",
            "get_notch_list",
            "comp_angle_q_axis",
            "comp_radius_mid_yoke",
            "get_yoke_desc",
            "get_bore_desc"
        ],
        "mother": "",
        "name": "Lamination",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Lamination.csv",
        "properties": [
            {
                "desc": "Lamination stack active length [m] without radial ventilation airducts but including insulation layers between lamination sheets",
                "max": "100",
                "min": "0",
                "name": "L1",
                "type": "float",
                "unit": "m",
                "value": 0.35
            },
            {
                "desc": "Lamination's material",
                "max": "",
                "min": "",
                "name": "mat_type",
                "type": "Material",
                "unit": "",
                "value": ""
            },
            {
                "desc": "number of radial air ventilation ducts in lamination",
                "max": "",
                "min": "0",
                "name": "Nrvd",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "axial width of ventilation ducts in lamination",
                "max": "",
                "min": "0",
                "name": "Wrvd",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "lamination stacking / packing factor",
                "max": "1",
                "min": "0",
                "name": "Kf1",
                "type": "float",
                "unit": "-",
                "value": 0.95
            },
            {
                "desc": "1 for internal lamination topology, 0 for external lamination",
                "max": "",
                "min": "",
                "name": "is_internal",
                "type": "bool",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "To fill",
                "max": "",
                "min": "0",
                "name": "Rint",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "To fill",
                "max": "",
                "min": "0",
                "name": "Rext",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "To fill",
                "max": "",
                "min": "",
                "name": "is_stator",
                "type": "bool",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Axial ventilation ducts",
                "max": "",
                "min": "",
                "name": "axial_vent",
                "type": "[Hole]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Lamination bore notches",
                "max": "",
                "min": "",
                "name": "notch",
                "type": "[Notch]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Lamination yoke notches",
                "max": "",
                "min": "",
                "name": "yoke_notch",
                "type": "[Notch]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Bore Shape",
                "max": "",
                "min": "",
                "name": "bore",
                "type": "Bore",
                "unit": "",
                "value": null
            }
        ]
    },
    "Line": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Arc",
            "Arc1",
            "Arc2",
            "Arc3",
            "Segment"
        ],
        "desc": "Abstract geometry class (A line between two points)",
        "is_internal": false,
        "methods": [
            "comp_normal"
        ],
        "mother": "",
        "name": "Line",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Line.csv",
        "properties": [
            {
                "desc": "the label of the Line (EX: Yoke_side)",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "Loss": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Losses module object that containt the loss models. See method add_model for implementation details.",
        "is_internal": false,
        "methods": [
            "run",
            "add_model",
            "remove_model"
        ],
        "mother": "",
        "name": "Loss",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Loss.csv",
        "properties": [
            {
                "desc": "Internal dict to strore model index",
                "max": "",
                "min": "",
                "name": "model_index",
                "type": "dict",
                "unit": "",
                "value": {}
            },
            {
                "desc": "Internal list of loss models",
                "max": "",
                "min": "",
                "name": "model_list",
                "type": "[LossModel]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Loss"
            }
        ]
    },
    "LossModel": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "LossModelBertotti",
            "LossModelWinding"
        ],
        "desc": "Abstract Loss Model Class",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "LossModel",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/LossModel.csv",
        "properties": [
            {
                "desc": "Name of the loss simulation (has to be unique)",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": ""
            }
        ]
    },
    "LossModelBertotti": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "F_REF",
                "value": "50"
            },
            {
                "name": "B_REF",
                "value": "1.5"
            }
        ],
        "daughters": [],
        "desc": "Bertotti Loss Model Class",
        "is_internal": false,
        "methods": [
            "comp_loss",
            "comp_coeff_Bertotti",
            "comp_loss_density"
        ],
        "mother": "LossModel",
        "name": "LossModelBertotti",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/LossModelBertotti.csv",
        "properties": [
            {
                "desc": "Hysteresis loss coefficient",
                "max": "",
                "min": "",
                "name": "k_hy",
                "type": "float",
                "unit": "W/kg",
                "value": null
            },
            {
                "desc": "Eddy current loss coefficient",
                "max": "",
                "min": "",
                "name": "k_ed",
                "type": "float",
                "unit": "W/kg",
                "value": null
            },
            {
                "desc": "Excess loss coefficient",
                "max": "",
                "min": "",
                "name": "k_ex",
                "type": "float",
                "unit": "W/kg",
                "value": null
            },
            {
                "desc": "Hysteresis loss power coefficient",
                "max": "",
                "min": "",
                "name": "alpha_hy",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Eddy current loss power coefficient",
                "max": "",
                "min": "",
                "name": "alpha_ed",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Excess loss power coefficient",
                "max": "",
                "min": "",
                "name": "alpha_ex",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "String to override default FEA group to apply model",
                "max": "",
                "min": "",
                "name": "group",
                "type": "str",
                "unit": "-",
                "value": "core"
            },
            {
                "desc": "Store the loss density",
                "max": "",
                "min": "",
                "name": "get_meshsolution",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "List of rotor speeds to override actual speed",
                "max": "",
                "min": "",
                "name": "N0",
                "type": "list",
                "unit": "rpm",
                "value": []
            }
        ]
    },
    "LossModelWinding": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Winding loss model",
        "is_internal": false,
        "methods": [
            "comp_loss"
        ],
        "mother": "LossModel",
        "name": "LossModelWinding",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/LossModelWinding.csv",
        "properties": [
            {
                "desc": "Winding temperature",
                "max": "",
                "min": "",
                "name": "temperature",
                "type": "float",
                "unit": "\u00c2\u00b0C",
                "value": 20
            }
        ]
    },
    "Machine": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MachineAsync",
            "MachineDFIM",
            "MachineIPMSM",
            "MachineLSPM",
            "MachineSCIM",
            "MachineSIPMSM",
            "MachineSRM",
            "MachineSyRM",
            "MachineSync",
            "MachineUD",
            "MachineWRSG",
            "MachineWRSM"
        ],
        "desc": "Abstract class for machines",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_angle_offset_initial",
            "comp_desc_dict",
            "comp_length_airgap_active",
            "comp_masses",
            "comp_output_geo",
            "comp_Rgap_mec",
            "comp_periodicity",
            "comp_width_airgap_mag",
            "comp_width_airgap_mec",
            "get_material_dict",
            "get_polar_eq",
            "plot",
            "plot_anim_rotor",
            "get_lam_list",
            "get_lam_list_label",
            "get_lam_by_label",
            "get_lam_index",
            "get_pole_pair_number",
            "set_pole_pair_number"
        ],
        "mother": "",
        "name": "Machine",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Machine.csv",
        "properties": [
            {
                "desc": "Machine's Frame",
                "max": "",
                "min": "",
                "name": "frame",
                "type": "Frame",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Shaft",
                "max": "",
                "min": "",
                "name": "shaft",
                "type": "Shaft",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Name of the machine",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": "default_machine"
            },
            {
                "desc": "Machine description",
                "max": "",
                "min": "",
                "name": "desc",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Integer to store the machine type (for the GUI, should be replaced by a test of the object type)",
                "max": "",
                "min": "",
                "name": "type_machine",
                "type": "int",
                "unit": "",
                "value": 1
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Machine"
            }
        ]
    },
    "MachineAsync": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MachineDFIM",
            "MachineSCIM"
        ],
        "desc": "Abstract class for asynchronous machines",
        "is_internal": false,
        "methods": [
            "is_synchronous",
            "comp_desc_dict"
        ],
        "mother": "Machine",
        "name": "MachineAsync",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineAsync.csv",
        "properties": []
    },
    "MachineDFIM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MachineSCIM"
        ],
        "desc": "Doubly Fed Induction Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineAsync",
        "name": "MachineDFIM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineDFIM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineIPMSM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Interior Permanent Magnet Synchronous Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineIPMSM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineIPMSM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamHole",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineLSPM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Line Start Permanent Magnet Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineLSPM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineLSPM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSquirrelCageMag",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineSCIM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Squirrel Cage Induction Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineDFIM",
        "name": "MachineSCIM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineSCIM.csv",
        "properties": []
    },
    "MachineSIPMSM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Inset and Surface Permanent Magnet Synchronous Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineSIPMSM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineSIPMSM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSlotMag",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineSRM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Switched Reluctance Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineSRM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineSRM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSlot",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineSyRM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Synchronous Reluctance Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineSyRM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineSyRM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamHole",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineSync": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MachineIPMSM",
            "MachineLSPM",
            "MachineSIPMSM",
            "MachineSRM",
            "MachineSyRM",
            "MachineWRSG",
            "MachineWRSM"
        ],
        "desc": "Abstract class for synchronous machine",
        "is_internal": false,
        "methods": [
            "is_synchronous"
        ],
        "mother": "Machine",
        "name": "MachineSync",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineSync.csv",
        "properties": []
    },
    "MachineUD": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "User defined Machine with multiple Laminations",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "is_synchronous"
        ],
        "mother": "Machine",
        "name": "MachineUD",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineUD.csv",
        "properties": [
            {
                "desc": "List of Lamination",
                "max": "",
                "min": "",
                "name": "lam_list",
                "type": "[Lamination]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "True if the machine should be handled as a Synchronous machine",
                "max": "",
                "min": "",
                "name": "is_sync",
                "type": "bool",
                "unit": "",
                "value": true
            }
        ]
    },
    "MachineWRSG": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Wound Rotor Synchronous Generator",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineWRSG",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineWRSG.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MachineWRSM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Wound Rotor Synchronous Machine",
        "is_internal": false,
        "methods": [
            "check",
            "get_machine_type"
        ],
        "mother": "MachineSync",
        "name": "MachineWRSM",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/MachineWRSM.csv",
        "properties": [
            {
                "desc": "Machine's Rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Machine's Stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "LamSlotWind",
                "unit": "",
                "value": ""
            }
        ]
    },
    "MagElmer": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Magnetic module: Finite Element model with Elmer",
        "is_internal": false,
        "methods": [
            "comp_flux_airgap",
            "solve_FEA",
            "get_meshsolution",
            "get_path_save_fea",
            "get_path_save",
            "comp_axes",
            "gen_elmer_mesh"
        ],
        "mother": "Magnetics",
        "name": "MagElmer",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/MagElmer.csv",
        "properties": [
            {
                "desc": "global coefficient to adjust mesh fineness (1 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kmesh_fineness",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "global coefficient to adjust geometry fineness (1 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kgeo_fineness",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "Name of the file to save the Elmer model",
                "max": "",
                "min": "",
                "name": "file_name",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To enforce user-defined values for Elmer main parameters ",
                "max": "",
                "min": "",
                "name": "FEA_dict",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To save FEA mesh for latter post-procesing ",
                "max": "",
                "min": "",
                "name": "is_get_mesh",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "To save FEA mesh and solution in a file",
                "max": "",
                "min": "",
                "name": "is_save_FEA",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "List of dictionary to apply transformation on the machine surfaces. Key: label (to select the surface), type (rotate or translate), value (alpha or delta)",
                "max": "",
                "min": "",
                "name": "transform_list",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "To use a dxf version of the rotor instead of build_geometry",
                "max": "",
                "min": "",
                "name": "rotor_dxf",
                "type": "DXFImport",
                "unit": "",
                "value": null
            },
            {
                "desc": "To use a dxf version of the rotor instead of build_geometry",
                "max": "",
                "min": "",
                "name": "stator_dxf",
                "type": "DXFImport",
                "unit": "",
                "value": null
            },
            {
                "desc": "To import an existing simulation file",
                "max": "",
                "min": "",
                "name": "import_file",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To run Elmer in parallel (the parallelization is on the time loop)",
                "max": "",
                "min": "",
                "name": "nb_worker",
                "type": "int",
                "unit": "",
                "value": 1
            }
        ]
    },
    "MagFEMM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Magnetic module: Finite Element model with FEMM",
        "is_internal": false,
        "methods": [
            "comp_flux_airgap",
            "get_path_save",
            "solve_FEMM",
            "get_meshsolution",
            "get_path_save_fem",
            "solve_FEMM_parallel"
        ],
        "mother": "Magnetics",
        "name": "MagFEMM",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/MagFEMM.csv",
        "properties": [
            {
                "desc": "global coefficient to adjust mesh fineness in FEMM (1 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kmesh_fineness",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "global coefficient to adjust geometry fineness in FEMM (1 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kgeo_fineness",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "0 no leakage calculation /  1 calculation using single slot ",
                "max": "1",
                "min": "0",
                "name": "type_calc_leakage",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Name of the file to save the FEMM model",
                "max": "",
                "min": "",
                "name": "file_name",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To enforce user-defined values for FEMM main parameters ",
                "max": "",
                "min": "",
                "name": "FEMM_dict_enforced",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To save FEA and mesh for latter post-procesing ",
                "max": "",
                "min": "",
                "name": "is_get_meshsolution",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "To save FEA and mesh as h5 files to save memory",
                "max": "",
                "min": "",
                "name": "is_save_meshsolution_as_file",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "0 to desactivate the sliding band",
                "max": "",
                "min": "",
                "name": "is_sliding_band",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "List of dictionary to apply transformation on the machine surfaces. Key: label (to select the surface), type (rotate or translate), value (alpha or delta)",
                "max": "",
                "min": "",
                "name": "transform_list",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "To use a dxf version of the rotor instead of build_geometry",
                "max": "",
                "min": "",
                "name": "rotor_dxf",
                "type": "DXFImport",
                "unit": "",
                "value": null
            },
            {
                "desc": "To use a dxf version of the rotor instead of build_geometry",
                "max": "",
                "min": "",
                "name": "stator_dxf",
                "type": "DXFImport",
                "unit": "",
                "value": null
            },
            {
                "desc": "To import an existing femm file",
                "max": "",
                "min": "",
                "name": "import_file",
                "type": "str",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "To close femm automatically after the simulation",
                "max": "",
                "min": "",
                "name": "is_close_femm",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "To run FEMM in parallel (the parallelization is on the time loop)",
                "max": "",
                "min": "",
                "name": "nb_worker",
                "type": "int",
                "unit": "",
                "value": 1
            },
            {
                "desc": "To enforce a different radius value for air-gap outputs",
                "max": "",
                "min": "",
                "name": "Rag_enforced",
                "type": "float",
                "unit": "m",
                "value": null
            }
        ]
    },
    "Magnet": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Magnet class",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Magnet",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Magnet.csv",
        "properties": [
            {
                "desc": "The Magnet material",
                "max": "",
                "min": "",
                "name": "mat_type",
                "type": "Material",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Permanent magnet magnetization type: 0 for radial, 1 for parallel, 2 for Hallbach",
                "max": "5",
                "min": "0",
                "name": "type_magnetization",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Magnet axial length",
                "max": "",
                "min": "0",
                "name": "Lmag",
                "type": "float",
                "unit": "-",
                "value": 0.95
            }
        ]
    },
    "Magnetics": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MagElmer",
            "MagFEMM"
        ],
        "desc": "Magnetic module abstract object",
        "is_internal": false,
        "methods": [
            "run",
            "comp_axes"
        ],
        "mother": "",
        "name": "Magnetics",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Magnetics.csv",
        "properties": [
            {
                "desc": "1 to artificially remove stator slotting effects in permeance mmf calculations",
                "max": "",
                "min": "",
                "name": "is_remove_slotS",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "1 to artificially remove rotor slotting effects in permeance mmf calculations",
                "max": "",
                "min": "",
                "name": "is_remove_slotR",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "1 to artificially remove the ventilations duct",
                "max": "",
                "min": "",
                "name": "is_remove_vent",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "1 to compute the stator magnetomotive force / stator armature magnetic field",
                "max": "",
                "min": "",
                "name": "is_mmfs",
                "type": "bool",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "1 to compute the rotor magnetomotive force / rotor magnetic field",
                "max": "",
                "min": "",
                "name": "is_mmfr",
                "type": "bool",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "0 to use the B(H) curve, 1 to use linear B(H) curve according to mur_lin, 2 to enforce infinite permeability (mur_lin =100000)",
                "max": "2",
                "min": "0",
                "name": "type_BH_stator",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "0 to use the B(H) curve, 1 to use linear B(H) curve according to mur_lin, 2 to enforce infinite permeability (mur_lin =100000)",
                "max": "2",
                "min": "0",
                "name": "type_BH_rotor",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True to compute only on one time periodicity (use periodicities defined in output.mag.Time)",
                "max": "",
                "min": "",
                "name": "is_periodicity_t",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True to compute only on one angle periodicity (use periodicities defined in output.mag.Angle)",
                "max": "",
                "min": "",
                "name": "is_periodicity_a",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Shift angle to appy to the stator in magnetic model",
                "max": "",
                "min": "",
                "name": "angle_stator_shift",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Shift angle to appy to the rotor in magnetic model",
                "max": "",
                "min": "",
                "name": "angle_rotor_shift",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Magnetics"
            }
        ]
    },
    "MatEconomical": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "material ecomomical properties",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "MatEconomical",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/MatEconomical.csv",
        "properties": [
            {
                "desc": "Cost of one kilo of material",
                "max": "",
                "min": "0",
                "name": "cost_unit",
                "type": "float",
                "unit": "unit/kg",
                "value": 0.127
            },
            {
                "desc": "Name of the unit",
                "max": "",
                "min": "",
                "name": "unit_name",
                "type": "str",
                "unit": "-",
                "value": "$"
            }
        ]
    },
    "MatElectrical": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "material electrical properties",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "MatElectrical",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/MatElectrical.csv",
        "properties": [
            {
                "desc": "Resistivity at 20 deg C",
                "max": "",
                "min": "0",
                "name": "rho",
                "type": "float",
                "unit": "ohm.m",
                "value": 1
            },
            {
                "desc": "Relative dielectric constant",
                "max": "",
                "min": "0",
                "name": "epsr",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Thermal Coefficient",
                "max": "",
                "min": "0",
                "name": "alpha",
                "type": "float",
                "unit": "1/K",
                "value": 1
            }
        ]
    },
    "MatHT": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Material Heat Transfer properties",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "MatHT",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/MatHT.csv",
        "properties": [
            {
                "desc": "thermal conductivity (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "lambda_x",
                "type": "float",
                "unit": "W/K",
                "value": 1
            },
            {
                "desc": "thermal conductivity (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "lambda_y",
                "type": "float",
                "unit": "W/K",
                "value": 1
            },
            {
                "desc": "thermal conductivity (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "lambda_z",
                "type": "float",
                "unit": "W/K",
                "value": 1
            },
            {
                "desc": "specific heat capacity",
                "max": "",
                "min": "0",
                "name": "Cp",
                "type": "float",
                "unit": "W/kg/K",
                "value": 1
            },
            {
                "desc": "thermal expansion coefficient",
                "max": "",
                "min": "0",
                "name": "alpha",
                "type": "float",
                "unit": "-",
                "value": 0.00393
            }
        ]
    },
    "MatMagnetics": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "magnetic material properties",
        "is_internal": false,
        "methods": [
            "get_BH",
            "plot_BH"
        ],
        "mother": "",
        "name": "MatMagnetics",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/MatMagnetics.csv",
        "properties": [
            {
                "desc": "Relative magnetic permeability",
                "max": "",
                "min": "0",
                "name": "mur_lin",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Coercitivity field",
                "max": "",
                "min": "0",
                "name": "Hc",
                "type": "float",
                "unit": "A/m",
                "value": 0
            },
            {
                "desc": "magnet remanence induction at 20degC",
                "max": "",
                "min": "",
                "name": "Brm20",
                "type": "float",
                "unit": "T",
                "value": 0
            },
            {
                "desc": "temperature coefficient for remanent flux density /degC compared to 20degC",
                "max": "",
                "min": "",
                "name": "alpha_Br",
                "type": "float",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "lamination sheet width without insulation [m] (0 == not laminated)",
                "max": "",
                "min": "0",
                "name": "Wlam",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "nonlinear B(H) curve (two columns matrix, H and B(H))",
                "max": "",
                "min": "",
                "name": "BH_curve",
                "type": "ImportMatrix",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "specific loss data value triplets, i.e. B, f, P",
                "max": "",
                "min": "",
                "name": "LossData",
                "type": "ImportMatrix",
                "unit": "W/kg",
                "value": ""
            },
            {
                "desc": "a model of BH curve with an analytical expression",
                "max": "",
                "min": "",
                "name": "ModelBH",
                "type": "ModelBH",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "1 to use ModelBH to fit input data and extrapolate BH curve",
                "max": "",
                "min": "",
                "name": "is_BH_extrapolate",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "MatStructural": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Material Structural properties",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "MatStructural",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/MatStructural.csv",
        "properties": [
            {
                "desc": "mass per unit volume [kg/m3]",
                "max": "",
                "min": "0",
                "name": "rho",
                "type": "float",
                "unit": "kg/m^3",
                "value": 7650
            },
            {
                "desc": "equivalent Young modulus (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Ex",
                "type": "float",
                "unit": "Pa",
                "value": 215000000000.0
            },
            {
                "desc": "equivalent Young modulus (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Ey",
                "type": "float",
                "unit": "Pa",
                "value": 215000000000.0
            },
            {
                "desc": "equivalent Young modulus (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Ez",
                "type": "float",
                "unit": "Pa",
                "value": 80000000000
            },
            {
                "desc": "equivalent Poisson ratio in the XY plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "nu_xy",
                "type": "float",
                "unit": "-",
                "value": 0.3
            },
            {
                "desc": "equivalent Poisson ratio in the XZ plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "nu_xz",
                "type": "float",
                "unit": "-",
                "value": 0.03
            },
            {
                "desc": "equivalent Poisson ratio in the YZ plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "nu_yz",
                "type": "float",
                "unit": "-",
                "value": 0.03
            },
            {
                "desc": "shear modulus in XY plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Gxz",
                "type": "float",
                "unit": "Pa",
                "value": 2000000000
            },
            {
                "desc": "shear modulus in XZ plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Gxy",
                "type": "float",
                "unit": "Pa",
                "value": 0
            },
            {
                "desc": "shear modulus in YZ plane (XY is lamination plane, Z is rotation axis)",
                "max": "",
                "min": "0",
                "name": "Gyz",
                "type": "float",
                "unit": "Pa",
                "value": 2000000000
            }
        ]
    },
    "Material": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Material",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/Material.csv",
        "properties": [
            {
                "desc": "name of the material",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": "Material"
            },
            {
                "desc": "If True, uniformity in all orientations",
                "max": "",
                "min": "",
                "name": "is_isotropic",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Electrical properties of the material",
                "max": "",
                "min": "",
                "name": "elec",
                "type": "MatElectrical",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Magnetic properties of the material",
                "max": "",
                "min": "",
                "name": "mag",
                "type": "MatMagnetics",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Structural properties of the material",
                "max": "",
                "min": "",
                "name": "struct",
                "type": "MatStructural",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Heat Transfer properties of the material",
                "max": "",
                "min": "",
                "name": "HT",
                "type": "MatHT",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Economical properties of the material",
                "max": "",
                "min": "",
                "name": "eco",
                "type": "MatEconomical",
                "unit": "",
                "value": ""
            },
            {
                "desc": "material description",
                "max": "",
                "min": "",
                "name": "desc",
                "type": "str",
                "unit": "",
                "value": "Material description"
            },
            {
                "desc": "Path to the material file",
                "max": "",
                "min": "",
                "name": "path",
                "type": "str",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Mesh": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "MeshMat",
            "MeshVTK"
        ],
        "desc": "Abstract Class for mesh related classes",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Mesh",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Mesh.csv",
        "properties": [
            {
                "desc": "Description of the mesh",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "-",
                "value": "None"
            },
            {
                "desc": "Dimension of the physical problem",
                "max": "3",
                "min": "1",
                "name": "dimension",
                "type": "int",
                "unit": "",
                "value": 2
            }
        ]
    },
    "MeshMat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the mesh storage format",
        "is_internal": false,
        "methods": [
            "get_node",
            "get_node_indice",
            "get_cell",
            "get_mesh_pv",
            "get_cell_area",
            "get_vertice",
            "get_node2cell",
            "add_cell",
            "renum",
            "find_cell",
            "interface",
            "clear_node",
            "clear_cell"
        ],
        "mother": "Mesh",
        "name": "MeshMat",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/MeshMat.csv",
        "properties": [
            {
                "desc": "Storing connectivity",
                "max": "",
                "min": "",
                "name": "cell",
                "type": "{CellMat}",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Storing nodes",
                "max": "",
                "min": "",
                "name": "node",
                "type": "NodeMat",
                "unit": "",
                "value": ""
            },
            {
                "desc": "True if renumering the nodes and cells is useful when renum method is called (saving calculation time)",
                "max": "",
                "min": "",
                "name": "_is_renum",
                "type": "bool",
                "unit": "",
                "value": 0
            }
        ]
    },
    "MeshSolution": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class to associate a mesh with one or several solutions",
        "is_internal": false,
        "methods": [
            "get_mesh",
            "get_solution",
            "get_field",
            "get_group",
            "get_mesh_field_pv",
            "plot_mesh",
            "plot_contour",
            "plot_deflection",
            "plot_deflection_animated",
            "plot_glyph",
            "plot_glyph_animated",
            "perm_coord"
        ],
        "mother": "",
        "name": "MeshSolution",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/MeshSolution.csv",
        "properties": [
            {
                "desc": "(Optional) Descriptive name of the mesh",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "A list of Mesh objects. ",
                "max": "",
                "min": "",
                "name": "mesh",
                "type": "[Mesh]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "1 if the mesh is the same at each step (time, mode etc.)",
                "max": "",
                "min": "",
                "name": "is_same_mesh",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "A list of Solution objects",
                "max": "",
                "min": "",
                "name": "solution",
                "type": "[Solution]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Dict sorted by groups name with list of cells indices. ",
                "max": "",
                "min": "",
                "name": "group",
                "type": "dict",
                "unit": "",
                "value": null
            },
            {
                "desc": "Dimension of the physical problem",
                "max": "3",
                "min": "1",
                "name": "dimension",
                "type": "int",
                "unit": "",
                "value": 2
            },
            {
                "desc": "Path where the MeshSolution is stored as a file",
                "max": "",
                "min": "",
                "name": "path",
                "type": "str",
                "unit": "",
                "value": "None"
            }
        ]
    },
    "MeshVTK": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the mesh storage format",
        "is_internal": false,
        "methods": [
            "get_mesh_pv",
            "get_node",
            "get_cell",
            "get_normals",
            "get_surf",
            "get_cell_area",
            "convert",
            "as_dict",
            "perm_coord",
            "get_path"
        ],
        "mother": "Mesh",
        "name": "MeshVTK",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/MeshVTK.csv",
        "properties": [
            {
                "desc": "Pyvista object of the mesh (optional)",
                "max": "",
                "min": "",
                "name": "mesh",
                "type": "vtk.vtkPointSet",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "Store the pyvista object",
                "max": "",
                "min": "",
                "name": "is_pyvista_mesh",
                "type": "bool",
                "unit": "",
                "value": false
            },
            {
                "desc": "Format in which the mesh is stored",
                "max": "",
                "min": "",
                "name": "format",
                "type": "str",
                "unit": "",
                "value": "vtk"
            },
            {
                "desc": "Path where the mesh is stored",
                "max": "",
                "min": "",
                "name": "path",
                "type": "str",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "Name of the mesh file",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": "mesh"
            },
            {
                "desc": "Pyvista object of the outer surface",
                "max": "",
                "min": "",
                "name": "surf",
                "type": "pyvista.core.pointset.PolyData",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "Save the surface mesh in a vtk file",
                "max": "",
                "min": "",
                "name": "is_vtk_surf",
                "type": "bool",
                "unit": "",
                "value": false
            },
            {
                "desc": "Path where the outer surface is stored",
                "max": "",
                "min": "",
                "name": "surf_path",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Name of the outer surface file",
                "max": "",
                "min": "",
                "name": "surf_name",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Array of normals to nodes (cell vertices)",
                "max": "",
                "min": "",
                "name": "node_normals",
                "type": "ndarray",
                "unit": "",
                "value": null
            }
        ]
    },
    "Mode": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Structural module: Mode object",
        "is_internal": false,
        "methods": [
            "plot",
            "plot_animated",
            "get_shape_xyz",
            "get_shape_pol"
        ],
        "mother": "SolutionMat",
        "name": "Mode",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Mode.csv",
        "properties": [
            {
                "desc": "Natural frequency of the mode",
                "max": "",
                "min": "",
                "name": "nat_freq",
                "type": "float",
                "unit": "Hz",
                "value": null
            },
            {
                "desc": "Circumferential order",
                "max": "",
                "min": "0",
                "name": "order_circ",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Longitudinal order",
                "max": "",
                "min": "0",
                "name": "order_long",
                "type": "int",
                "unit": "-",
                "value": null
            }
        ]
    },
    "ModelBH": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ModelBH_Langevin",
            "ModelBH_arctangent",
            "ModelBH_linear_sat"
        ],
        "desc": "Abstract class for BH curve model ",
        "is_internal": false,
        "methods": [
            "get_BH",
            "fit_model"
        ],
        "mother": "",
        "name": "ModelBH",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/ModelBH.csv",
        "properties": [
            {
                "desc": "Max value of H for extrapolation",
                "max": "",
                "min": "",
                "name": "Bmax",
                "type": "float",
                "unit": "-",
                "value": 2.31
            },
            {
                "desc": "Max value of B for extrapolation",
                "max": "",
                "min": "",
                "name": "Hmax",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Step value for H",
                "max": "",
                "min": "",
                "name": "delta",
                "type": "float",
                "unit": "-",
                "value": 100
            }
        ]
    },
    "ModelBH_Langevin": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for BH curve model ",
        "is_internal": false,
        "methods": [
            "get_BH",
            "BH_func"
        ],
        "mother": "ModelBH",
        "name": "ModelBH_Langevin",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/ModelBH_Langevin.csv",
        "properties": [
            {
                "desc": "To enforc Saturation flux density",
                "max": "",
                "min": "",
                "name": "Bs",
                "type": "float",
                "unit": "T",
                "value": null
            },
            {
                "desc": "To enforce Saturation parameter a",
                "max": "",
                "min": "",
                "name": "a",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Init value for Bs for fitting algorithm",
                "max": "",
                "min": "",
                "name": "param1",
                "type": "float",
                "unit": "-",
                "value": 1.89
            },
            {
                "desc": "Init value for a for fitting algorithm",
                "max": "",
                "min": "",
                "name": "param2",
                "type": "float",
                "unit": "-",
                "value": 240
            }
        ]
    },
    "ModelBH_arctangent": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for BH curve model ",
        "is_internal": false,
        "methods": [],
        "mother": "ModelBH",
        "name": "ModelBH_arctangent",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/ModelBH_arctangent.csv",
        "properties": [
            {
                "desc": "BH curve parameter",
                "max": "",
                "min": "",
                "name": "k",
                "type": "float",
                "unit": "T",
                "value": null
            },
            {
                "desc": "Saturation permeability parameter",
                "max": "",
                "min": "",
                "name": "mu_a",
                "type": "float",
                "unit": "-",
                "value": null
            }
        ]
    },
    "ModelBH_exponential": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for BH curve model ",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "ModelBH_exponential",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/ModelBH_exponential.csv",
        "properties": [
            {
                "desc": "BH curve parameter",
                "max": "",
                "min": "",
                "name": "Bs",
                "type": "float",
                "unit": "T",
                "value": null
            },
            {
                "desc": "Saturation permeability parameter",
                "max": "",
                "min": "",
                "name": "mu_a",
                "type": "float",
                "unit": "-",
                "value": null
            }
        ]
    },
    "ModelBH_linear_sat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Abstract class for BH curve model ",
        "is_internal": false,
        "methods": [
            "get_BH",
            "BH_func"
        ],
        "mother": "ModelBH",
        "name": "ModelBH_linear_sat",
        "package": "Material",
        "path": "pyleecan/Generator/ClassesRef/Material/ModelBH_linear_sat.csv",
        "properties": [
            {
                "desc": "Saturation flux density",
                "max": "",
                "min": "",
                "name": "Bs",
                "type": "float",
                "unit": "T",
                "value": null
            },
            {
                "desc": "Linear permeability",
                "max": "",
                "min": "",
                "name": "mu_a",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Init value for Bs for fitting algorithm",
                "max": "",
                "min": "",
                "name": "param1",
                "type": "float",
                "unit": "-",
                "value": 1.89
            },
            {
                "desc": "Init value for mu_a for fitting algorithm",
                "max": "",
                "min": "",
                "name": "param2",
                "type": "float",
                "unit": "-",
                "value": 240
            }
        ]
    },
    "NodeMat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to define nodes coordinates and getter.",
        "is_internal": false,
        "methods": [
            "add_node",
            "get_coord",
            "is_exist",
            "get_indice"
        ],
        "mother": "",
        "name": "NodeMat",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/NodeMat.csv",
        "properties": [
            {
                "desc": "Nodes coordinates",
                "max": "",
                "min": "",
                "name": "coordinate",
                "type": "ndarray",
                "unit": "",
                "value": []
            },
            {
                "desc": "Total number of nodes",
                "max": "",
                "min": "",
                "name": "nb_node",
                "type": "int",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Sensibility for node searching",
                "max": "",
                "min": "",
                "name": "delta",
                "type": "float",
                "unit": "",
                "value": 1e-10
            },
            {
                "desc": "Nodes unique indices",
                "max": "",
                "min": "",
                "name": "indice",
                "type": "ndarray",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Notch": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "NotchEvenDist"
        ],
        "desc": "Abstract class for notches",
        "is_internal": false,
        "methods": [
            "get_Rbo",
            "is_outwards"
        ],
        "mother": "",
        "name": "Notch",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Notch.csv",
        "properties": []
    },
    "NotchEvenDist": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class for evenly distributed notches (according to Zs)",
        "is_internal": false,
        "methods": [
            "get_notch_list",
            "comp_surface"
        ],
        "mother": "Notch",
        "name": "NotchEvenDist",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/NotchEvenDist.csv",
        "properties": [
            {
                "desc": "angular positon of the first notch",
                "max": "",
                "min": "",
                "name": "alpha",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Shape of the Notch",
                "max": "",
                "min": "",
                "name": "notch_shape",
                "type": "Slot",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "OptiConstraint": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Constraint of the optimization problem",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OptiConstraint",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiConstraint.csv",
        "properties": [
            {
                "desc": "name of the design variable",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Type of comparison ( \"==\", \"<=\", \">=\", \"<\",\">\")",
                "max": "",
                "min": "",
                "name": "type_const",
                "type": "str",
                "unit": "",
                "value": "<="
            },
            {
                "desc": "Value to compare",
                "max": "",
                "min": "",
                "name": "value",
                "type": "float",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Function to get the variable to compare",
                "max": "",
                "min": "",
                "name": "get_variable",
                "type": "function",
                "unit": "",
                "value": null
            }
        ]
    },
    "OptiDesignVar": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Optimization",
        "is_internal": false,
        "methods": [],
        "mother": "ParamExplorer",
        "name": "OptiDesignVar",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiDesignVar.csv",
        "properties": [
            {
                "desc": "Type of the variable interval or set.",
                "max": "",
                "min": "",
                "name": "type_var",
                "type": "str",
                "unit": "",
                "value": "interval"
            },
            {
                "desc": "Space of the variable",
                "max": "",
                "min": "",
                "name": "space",
                "type": "list",
                "unit": "",
                "value": [
                    0,
                    1
                ]
            },
            {
                "desc": "Function of the space to initiate the variable",
                "max": "",
                "min": "",
                "name": "get_value",
                "type": "function",
                "unit": "",
                "value": null
            }
        ]
    },
    "OptiGenAlg": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "OptiGenAlgNsga2Deap"
        ],
        "desc": "Genetic algorithm class",
        "is_internal": false,
        "methods": [],
        "mother": "OptiSolver",
        "name": "OptiGenAlg",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiGenAlg.csv",
        "properties": [
            {
                "desc": "Selector of the genetic algorithm",
                "max": "",
                "min": "",
                "name": "selector",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Crossover of the genetic algorithm",
                "max": "",
                "min": "",
                "name": "crossover",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Mutator of the genetic algorithm",
                "max": "",
                "min": "",
                "name": "mutator",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Probability of crossover",
                "max": "1",
                "min": "0",
                "name": "p_cross",
                "type": "float",
                "unit": "-",
                "value": 0.9
            },
            {
                "desc": "Probability of mutation ",
                "max": "1",
                "min": "0",
                "name": "p_mutate",
                "type": "float",
                "unit": "-",
                "value": 0.1
            },
            {
                "desc": "Size of the population",
                "max": "",
                "min": "1",
                "name": "size_pop",
                "type": "int",
                "unit": "-",
                "value": 40
            },
            {
                "desc": "Number of generations",
                "max": "",
                "min": "1",
                "name": "nb_gen",
                "type": "int",
                "unit": "-",
                "value": 100
            }
        ]
    },
    "OptiGenAlgNsga2Deap": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Multi-objectives optimization problem with some constraints",
        "is_internal": false,
        "methods": [
            "solve",
            "mutate",
            "cross",
            "create_toolbox",
            "check_optimization_input",
            "delete_toolbox"
        ],
        "mother": "OptiGenAlg",
        "name": "OptiGenAlgNsga2Deap",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiGenAlgNsga2Deap.csv",
        "properties": [
            {
                "desc": "DEAP toolbox",
                "max": "",
                "min": "",
                "name": "toolbox",
                "type": "deap.base.Toolbox",
                "unit": "",
                "value": "None"
            }
        ]
    },
    "OptiObjective": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to distinguish normal DataKeeper from optimization objectives ",
        "is_internal": false,
        "methods": [],
        "mother": "DataKeeper",
        "name": "OptiObjective",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiObjective.csv",
        "properties": []
    },
    "OptiProblem": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Multi-objectives optimization problem with some constraints",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OptiProblem",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiProblem.csv",
        "properties": [
            {
                "desc": "Default simulation",
                "max": "",
                "min": "",
                "name": "simu",
                "type": "Simulation",
                "unit": "",
                "value": ""
            },
            {
                "desc": "List of design variables",
                "max": "",
                "min": "",
                "name": "design_var",
                "type": "[OptiDesignVar]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "List of objective functions",
                "max": "",
                "min": "",
                "name": "obj_func",
                "type": "[OptiObjective]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Function to evaluate before computing obj function and constraints",
                "max": "",
                "min": "",
                "name": "eval_func",
                "type": "function",
                "unit": "",
                "value": null
            },
            {
                "desc": "List containing the constraints ",
                "max": "",
                "min": "",
                "name": "constraint",
                "type": "[OptiConstraint]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Function to execute a preprocessing on the simulation right before it is run.",
                "max": "",
                "min": "",
                "name": "preprocessing",
                "type": "function",
                "unit": "",
                "value": null
            },
            {
                "desc": "List of DataKeepers to run on every output",
                "max": "",
                "min": "",
                "name": "datakeeper_list",
                "type": "[DataKeeper]",
                "unit": "",
                "value": ""
            }
        ]
    },
    "OptiSolver": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "OptiGenAlg",
            "OptiGenAlgNsga2Deap"
        ],
        "desc": "Optimization solver class",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OptiSolver",
        "package": "Optimization",
        "path": "pyleecan/Generator/ClassesRef/Optimization/OptiSolver.csv",
        "properties": [
            {
                "desc": "Problem to solve",
                "max": "",
                "min": "",
                "name": "problem",
                "type": "OptiProblem",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Optimization results containing every output",
                "max": "",
                "min": "",
                "name": "xoutput",
                "type": "XOutput",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.OptiSolver"
            },
            {
                "desc": "Boolean to keep every output",
                "max": "",
                "min": "",
                "name": "is_keep_all_output",
                "type": "bool",
                "unit": "-",
                "value": false
            }
        ]
    },
    "OutElec": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the electric module outputs",
        "is_internal": false,
        "methods": [
            "get_Nr",
            "get_Is",
            "get_Us",
            "comp_I_mag"
        ],
        "mother": "",
        "name": "OutElec",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutElec.csv",
        "properties": [
            {
                "desc": "Electrical time Data object",
                "max": "",
                "min": "",
                "name": "Time",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "s",
                "value": "None"
            },
            {
                "desc": "Electrical position Data object",
                "max": "",
                "min": "",
                "name": "Angle",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "rad",
                "value": "None"
            },
            {
                "desc": "Stator currents DataTime object",
                "max": "",
                "min": "",
                "name": "Is",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "A",
                "value": "None"
            },
            {
                "desc": "Rotor currents as a function of time (each column correspond to one phase)",
                "max": "",
                "min": "",
                "name": "Ir",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "A",
                "value": "None"
            },
            {
                "desc": "Rotor angular position as a function of time (if None computed according to Nr)",
                "max": "",
                "min": "",
                "name": "angle_rotor",
                "type": "ndarray",
                "unit": "rad",
                "value": null
            },
            {
                "desc": "Rotor speed",
                "max": "",
                "min": "",
                "name": "N0",
                "type": "float",
                "unit": "rpm",
                "value": null
            },
            {
                "desc": "Initial angular position of the rotor at t=0",
                "max": "",
                "min": "",
                "name": "angle_rotor_initial",
                "type": "float",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Electrical"
            },
            {
                "desc": "Theorical Average Electromagnetic torque",
                "max": "",
                "min": "",
                "name": "Tem_av_ref",
                "type": "float",
                "unit": "N.m",
                "value": null
            },
            {
                "desc": "Electrical time vector (no symmetry)",
                "max": "",
                "min": "",
                "name": "Id_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "q-axis current magnitude",
                "max": "",
                "min": "",
                "name": "Iq_ref",
                "type": "float",
                "unit": "A",
                "value": null
            },
            {
                "desc": "Electrical Frequency",
                "max": "",
                "min": "",
                "name": "felec",
                "type": "float",
                "unit": "Hz",
                "value": null
            },
            {
                "desc": "d-axis voltage magnitude",
                "max": "",
                "min": "",
                "name": "Ud_ref",
                "type": "float",
                "unit": "V",
                "value": null
            },
            {
                "desc": "q-axis voltage magnitude",
                "max": "",
                "min": "",
                "name": "Uq_ref",
                "type": "float",
                "unit": "V",
                "value": null
            },
            {
                "desc": "Electrical Joule losses",
                "max": "",
                "min": "",
                "name": "Pj_losses",
                "type": "float",
                "unit": "W",
                "value": null
            },
            {
                "desc": "Average Electromagnetic power",
                "max": "",
                "min": "",
                "name": "Pem_av_ref",
                "type": "float",
                "unit": "W",
                "value": null
            },
            {
                "desc": "Stator voltage as a function of time (each column correspond to one phase)",
                "max": "",
                "min": "",
                "name": "Us",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "V",
                "value": "None"
            },
            {
                "desc": "OutInternal object containg outputs related to a specific model",
                "max": "",
                "min": "",
                "name": "internal",
                "type": "OutInternal",
                "unit": "-",
                "value": null
            }
        ]
    },
    "OutForce": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the structural module outputs",
        "is_internal": false,
        "methods": [
            "store"
        ],
        "mother": "",
        "name": "OutForce",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutForce.csv",
        "properties": [
            {
                "desc": "Force time Data object",
                "max": "",
                "min": "",
                "name": "Time",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "s",
                "value": "None"
            },
            {
                "desc": "Force position Data object",
                "max": "",
                "min": "",
                "name": "Angle",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "rad",
                "value": "None"
            },
            {
                "desc": "Air Gap Surface Force (mainly computed with Maxwell stress tensor)",
                "max": "",
                "min": "",
                "name": "AGSF",
                "type": "SciDataTool.Classes.VectorField.VectorField",
                "unit": "N.m^2",
                "value": "None"
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Force"
            },
            {
                "desc": "Radius value for air-gap computation",
                "max": "",
                "min": "",
                "name": "Rag",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Force computed on a mesh",
                "max": "",
                "min": "",
                "name": "meshsolution",
                "type": "MeshSolution",
                "unit": "-",
                "value": null
            }
        ]
    },
    "OutGeo": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the geometrical and the global outputs",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OutGeo",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutGeo.csv",
        "properties": [
            {
                "desc": "Geometry output of the stator",
                "max": "",
                "min": "",
                "name": "stator",
                "type": "OutGeoLam",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Geometry output of the rotor",
                "max": "",
                "min": "",
                "name": "rotor",
                "type": "OutGeoLam",
                "unit": "-",
                "value": null
            },
            {
                "desc": "mechanical airgap width (minimal distance between the lamination including magnet)",
                "max": "",
                "min": "",
                "name": "Wgap_mec",
                "type": "float",
                "unit": "m",
                "value": null
            },
            {
                "desc": "the magnetic airgap width (distance beetween the two Laminations bore radius)",
                "max": "",
                "min": "",
                "name": "Wgap_mag",
                "type": "float",
                "unit": "m",
                "value": null
            },
            {
                "desc": "radius of the center of the mecanical airgap",
                "max": "",
                "min": "",
                "name": "Rgap_mec",
                "type": "float",
                "unit": "m",
                "value": null
            },
            {
                "desc": "Airgap active length",
                "max": "",
                "min": "",
                "name": "Lgap",
                "type": "float",
                "unit": "m",
                "value": null
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.OutGeo"
            },
            {
                "desc": "Difference between the d axis angle of the stator and the rotor",
                "max": "",
                "min": "",
                "name": "angle_offset_initial",
                "type": "float",
                "unit": "rad",
                "value": null
            },
            {
                "desc": "rotation direction of the magnetic field fundamental !! WARNING: rot_dir = -1 to have positive rotor rotating direction, i.e. rotor position moves towards positive angle",
                "max": "1",
                "min": "-1",
                "name": "rot_dir",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Number of spatial periodicities of the machine",
                "max": "",
                "min": "",
                "name": "per_a",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True if an spatial anti-periodicity is possible after the periodicities",
                "max": "",
                "min": "",
                "name": "is_antiper_a",
                "type": "bool",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Number of time periodicities of the machine",
                "max": "",
                "min": "",
                "name": "per_t",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True if an time anti-periodicity is possible after the periodicities",
                "max": "",
                "min": "",
                "name": "is_antiper_t",
                "type": "bool",
                "unit": "-",
                "value": null
            }
        ]
    },
    "OutGeoLam": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the geometrical and the global outputs of a lamination",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OutGeoLam",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutGeoLam.csv",
        "properties": [
            {
                "desc": "Name of the phases of the winding (if any)",
                "max": "",
                "min": "",
                "name": "name_phase",
                "type": "list",
                "unit": "-",
                "value": null
            },
            {
                "desc": "B(H) curve (two columns matrix, H and B(H))",
                "max": "",
                "min": "",
                "name": "BH_curve",
                "type": "ndarray",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Slot fill factor",
                "max": "",
                "min": "",
                "name": "Ksfill",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Slot surface",
                "max": "",
                "min": "",
                "name": "S_slot",
                "type": "float",
                "unit": "m^2",
                "value": null
            },
            {
                "desc": "Slot winding surface",
                "max": "",
                "min": "",
                "name": "S_slot_wind",
                "type": "float",
                "unit": "m^2",
                "value": null
            },
            {
                "desc": "Conductor active surface",
                "max": "",
                "min": "",
                "name": "S_wind_act",
                "type": "float",
                "unit": "m^2",
                "value": null
            },
            {
                "desc": "Number of spatial periodicities of the lamination",
                "max": "",
                "min": "",
                "name": "per_a",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True if an spatial anti-periodicity is possible after the periodicities",
                "max": "",
                "min": "",
                "name": "is_antiper_a",
                "type": "bool",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Number of time periodicities of the lamination",
                "max": "",
                "min": "",
                "name": "per_t",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "True if an time anti-periodicity is possible after the periodicities",
                "max": "",
                "min": "",
                "name": "is_antiper_t",
                "type": "bool",
                "unit": "-",
                "value": null
            }
        ]
    },
    "OutInternal": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "OutMagElmer",
            "OutMagFEMM"
        ],
        "desc": "Abstract class whose childs enable to store outputs related to a specific model",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OutInternal",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutInternal.csv",
        "properties": []
    },
    "OutLoss": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the loss module outputs",
        "is_internal": false,
        "methods": [
            "get_loss",
            "get_loss_dist"
        ],
        "mother": "",
        "name": "OutLoss",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutLoss.csv",
        "properties": [
            {
                "desc": "Internal list of loss data",
                "max": "",
                "min": "",
                "name": "loss_list",
                "type": "[SciDataTool.Classes.DataND.DataND]",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "Internal list of loss meshsolutions",
                "max": "",
                "min": "",
                "name": "meshsol_list",
                "type": "[MeshSolution]",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Internal dict to index losses",
                "max": "",
                "min": "",
                "name": "loss_index",
                "type": "dict",
                "unit": "",
                "value": {}
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Loss"
            }
        ]
    },
    "OutMag": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the magnetic module outputs",
        "is_internal": false,
        "methods": [
            "store",
            "clean",
            "comp_emf",
            "get_demag"
        ],
        "mother": "",
        "name": "OutMag",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutMag.csv",
        "properties": [
            {
                "desc": "Magnetic time Data object",
                "max": "",
                "min": "",
                "name": "Time",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "s",
                "value": "None"
            },
            {
                "desc": "Magnetic position Data object",
                "max": "",
                "min": "",
                "name": "Angle",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "rad",
                "value": "None"
            },
            {
                "desc": "Airgap flux density VectorField object",
                "max": "",
                "min": "",
                "name": "B",
                "type": "SciDataTool.Classes.VectorField.VectorField",
                "unit": "H",
                "value": "None"
            },
            {
                "desc": "Electromagnetic torque DataTime object",
                "max": "",
                "min": "",
                "name": "Tem",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "N.m",
                "value": "None"
            },
            {
                "desc": "Average Electromagnetic torque",
                "max": "",
                "min": "",
                "name": "Tem_av",
                "type": "float",
                "unit": "N.m",
                "value": null
            },
            {
                "desc": "Peak to Peak Torque ripple normalized according to average torque (None if average torque=0)",
                "max": "",
                "min": "",
                "name": "Tem_rip_norm",
                "type": "float",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Peak to Peak Torque ripple",
                "max": "",
                "min": "",
                "name": "Tem_rip_pp",
                "type": "float",
                "unit": "N.m",
                "value": null
            },
            {
                "desc": "Stator winding flux DataTime object",
                "max": "",
                "min": "",
                "name": "Phi_wind_stator",
                "type": "SciDataTool.Classes.DataTime.DataTime",
                "unit": "Wb",
                "value": "None"
            },
            {
                "desc": "Dict of lamination winding fluxlinkage DataTime objects",
                "max": "",
                "min": "",
                "name": "Phi_wind",
                "type": "{SciDataTool.Classes.DataTime.DataTime}",
                "unit": "Wb",
                "value": "None"
            },
            {
                "desc": "Electromotive force DataTime object",
                "max": "",
                "min": "",
                "name": "emf",
                "type": "SciDataTool.Classes.DataTime.DataTime",
                "unit": "V",
                "value": "None"
            },
            {
                "desc": "FEA software mesh and solution",
                "max": "",
                "min": "",
                "name": "meshsolution",
                "type": "MeshSolution",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Magnetics"
            },
            {
                "desc": "OutInternal object containg outputs related to a specific model",
                "max": "",
                "min": "",
                "name": "internal",
                "type": "OutInternal",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Radius value for air-gap computation",
                "max": "",
                "min": "",
                "name": "Rag",
                "type": "float",
                "unit": "-",
                "value": null
            }
        ]
    },
    "OutMagElmer": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to store outputs related to MagElmer magnetic model",
        "is_internal": false,
        "methods": [
            "clean"
        ],
        "mother": "OutInternal",
        "name": "OutMagElmer",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutMagElmer.csv",
        "properties": [
            {
                "desc": "dictionary containing the main FEA parameters",
                "max": "",
                "min": "",
                "name": "FEA_dict",
                "type": "dict",
                "unit": "",
                "value": null
            }
        ]
    },
    "OutMagFEMM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to store outputs related to MagFEMM magnetic model",
        "is_internal": false,
        "methods": [
            "clean"
        ],
        "mother": "OutInternal",
        "name": "OutMagFEMM",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutMagFEMM.csv",
        "properties": [
            {
                "desc": "dictionary containing the main FEMM parameters",
                "max": "",
                "min": "",
                "name": "FEMM_dict",
                "type": "dict",
                "unit": "",
                "value": null
            },
            {
                "desc": "List of FEMM Handler (more than 1 if nb_worker >1)",
                "max": "",
                "min": "",
                "name": "handler_list",
                "type": "[_FEMMHandler]",
                "unit": "",
                "value": ""
            }
        ]
    },
    "OutPost": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the parameters for the post-processings",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OutPost",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutPost.csv",
        "properties": [
            {
                "desc": "Name to use in the legend in case of comparison",
                "max": "",
                "min": "",
                "name": "legend_name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Color to use in case of comparison",
                "max": "",
                "min": "",
                "name": "line_color",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "OutStruct": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Gather the structural module outputs",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "OutStruct",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/OutStruct.csv",
        "properties": [
            {
                "desc": "Structural time Data object",
                "max": "",
                "min": "",
                "name": "Time",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "s",
                "value": "None"
            },
            {
                "desc": "Structural position Data object",
                "max": "",
                "min": "",
                "name": "Angle",
                "type": "SciDataTool.Classes.DataND.Data",
                "unit": "rad",
                "value": "None"
            },
            {
                "desc": "Length of the time vector",
                "max": "",
                "min": "",
                "name": "Nt_tot",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Length of the angle vector",
                "max": "",
                "min": "",
                "name": "Na_tot",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Structural"
            },
            {
                "desc": "Displacement output",
                "max": "",
                "min": "",
                "name": "Yr",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "m",
                "value": "None"
            },
            {
                "desc": "Velocity output",
                "max": "",
                "min": "",
                "name": "Vr",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "m/s",
                "value": "None"
            },
            {
                "desc": "Acceleration output",
                "max": "",
                "min": "",
                "name": "Ar",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "m/s^2",
                "value": "None"
            },
            {
                "desc": "FEA software mesh and solution",
                "max": "",
                "min": "",
                "name": "meshsolution",
                "type": "MeshSolution",
                "unit": "",
                "value": ""
            },
            {
                "desc": "dictionary containing the main FEA parameter",
                "max": "",
                "min": "",
                "name": "FEA_dict",
                "type": "dict",
                "unit": "",
                "value": null
            }
        ]
    },
    "Output": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "XOutput"
        ],
        "desc": "Main Output object: gather all the outputs of all the modules",
        "is_internal": false,
        "methods": [
            "getter.get_angle_offset_initial",
            "getter.get_angle_rotor",
            "getter.get_BH_rotor",
            "getter.get_BH_stator",
            "getter.get_path_result",
            "getter.get_machine_periodicity",
            "getter.get_rot_dir",
            "getter.get_fund_harm",
            "getter.get_data_from_str",
            "print_memory"
        ],
        "mother": "",
        "name": "Output",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/Output.csv",
        "properties": [
            {
                "desc": "Simulation object that generated the Output",
                "max": "",
                "min": "",
                "name": "simu",
                "type": "Simulation",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Path to the folder to same the results",
                "max": "",
                "min": "",
                "name": "path_result",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Geometry output",
                "max": "",
                "min": "",
                "name": "geo",
                "type": "OutGeo",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Electrical module output",
                "max": "",
                "min": "",
                "name": "elec",
                "type": "OutElec",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Magnetic module output",
                "max": "",
                "min": "",
                "name": "mag",
                "type": "OutMag",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Structural module output",
                "max": "",
                "min": "",
                "name": "struct",
                "type": "OutStruct",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Post-Processing settings",
                "max": "",
                "min": "",
                "name": "post",
                "type": "OutPost",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Output"
            },
            {
                "desc": "Force module output",
                "max": "",
                "min": "",
                "name": "force",
                "type": "OutForce",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Loss module output",
                "max": "",
                "min": "",
                "name": "loss",
                "type": "OutLoss",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "ParamExplorer": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "OptiDesignVar",
            "ParamExplorerInterval",
            "ParamExplorerSet"
        ],
        "desc": "Abstract class for the multi-simulation",
        "is_internal": false,
        "methods": [
            "_set_setter",
            "_set_getter",
            "get_desc"
        ],
        "mother": "",
        "name": "ParamExplorer",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/ParamExplorer.csv",
        "properties": [
            {
                "desc": "Parameter name",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Parameter symbol",
                "max": "",
                "min": "",
                "name": "symbol",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Parameter unit",
                "max": "",
                "min": "",
                "name": "unit",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Function that takes a Simulation and a value in argument and modifiers the simulation",
                "max": "",
                "min": "",
                "name": "setter",
                "type": "function",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Function to return the reference value (simulation as argument)",
                "max": "",
                "min": "",
                "name": "getter",
                "type": "function",
                "unit": "-",
                "value": null
            }
        ]
    },
    "ParamExplorerInterval": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Define a set of value (for parameter sweep) on interval",
        "is_internal": false,
        "methods": [
            "get_value",
            "get_min",
            "get_max",
            "get_N"
        ],
        "mother": "ParamExplorer",
        "name": "ParamExplorerInterval",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/ParamExplorerInterval.csv",
        "properties": [
            {
                "desc": "Minumum value of the interval",
                "max": "",
                "min": "",
                "name": "min_value",
                "type": "float",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Maximum value of the interval",
                "max": "",
                "min": "",
                "name": "max_value",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "Number of value to take in the interval",
                "max": "",
                "min": "2",
                "name": "N",
                "type": "int",
                "unit": "-",
                "value": 4
            },
            {
                "desc": "How to generate the value list. 0: linspace, 1: random (Not available yet)",
                "max": "1",
                "min": "0",
                "name": "type_value_gen",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Type of the value: 0:float, 1:int",
                "max": "1",
                "min": "0",
                "name": "type_value",
                "type": "int",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "ParamExplorerSet": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Define a parameter set (for parameter sweep) from a list",
        "is_internal": false,
        "methods": [
            "get_value",
            "as_dict",
            "get_min",
            "get_max",
            "get_N",
            "_set_value"
        ],
        "mother": "ParamExplorer",
        "name": "ParamExplorerSet",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/ParamExplorerSet.csv",
        "properties": [
            {
                "desc": "List containing the different parameter values to explore",
                "max": "",
                "min": "",
                "name": "value",
                "type": "list",
                "unit": "-",
                "value": []
            }
        ]
    },
    "PolarArc": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "PolarArc defined by  the center of object(point_ref), the label, the angle and the height",
        "is_internal": false,
        "methods": [
            "get_lines",
            "rotate",
            "translate",
            "check",
            "comp_length",
            "discretize",
            "get_patches",
            "comp_surface",
            "comp_point_ref"
        ],
        "mother": "Surface",
        "name": "PolarArc",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/PolarArc.csv",
        "properties": [
            {
                "desc": "Polar angle",
                "max": "",
                "min": "0",
                "name": "angle",
                "type": "float",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "The Heigth of the PolarAngle",
                "max": "",
                "min": "0",
                "name": "height",
                "type": "float",
                "unit": "m",
                "value": 1
            }
        ]
    },
    "Post": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "PostFunction",
            "PostMethod",
            "PostPlot"
        ],
        "desc": "Abstract class for postprocessing",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Post",
        "package": "Post",
        "path": "pyleecan/Generator/ClassesRef/Post/Post.csv",
        "properties": []
    },
    "PostFunction": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Post-processing from a user-defined function",
        "is_internal": false,
        "methods": [],
        "mother": "Post",
        "name": "PostFunction",
        "package": "Post",
        "path": "pyleecan/Generator/ClassesRef/Post/PostFunction.csv",
        "properties": [
            {
                "desc": "Post-processing that takes an output in argument",
                "max": "",
                "min": "",
                "name": "run",
                "type": "function",
                "unit": "",
                "value": null
            }
        ]
    },
    "PostMethod": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "PostPlot"
        ],
        "desc": "Abstract class for post-processing defined in the method run",
        "is_internal": false,
        "methods": [
            "run"
        ],
        "mother": "Post",
        "name": "PostMethod",
        "package": "Post",
        "path": "pyleecan/Generator/ClassesRef/Post/PostMethod.csv",
        "properties": []
    },
    "PostPlot": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Post-processing to do a plot which is a method of Output or other class if attribute is not None",
        "is_internal": false,
        "methods": [
            "run"
        ],
        "mother": "PostMethod",
        "name": "PostPlot",
        "package": "Post",
        "path": "pyleecan/Generator/ClassesRef/Post/PostPlot.csv",
        "properties": [
            {
                "desc": "Name of the plot method to call (e.g. plot_2D_Data, plot_contour, plot_multi)",
                "max": "",
                "min": "",
                "name": "method",
                "type": "str",
                "unit": "",
                "value": "None"
            },
            {
                "desc": "Name of the plot to use when saving the figure after plotting",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "",
                "value": "[]"
            },
            {
                "desc": "dictionary of parameters to pass to the plot method when executing it",
                "max": "",
                "min": "",
                "name": "param_list",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "dictionary of parameters to pass to the plot method when executing it",
                "max": "",
                "min": "",
                "name": "param_dict",
                "type": "dict",
                "unit": "",
                "value": {}
            },
            {
                "desc": "File format extension (\"png\", \"svg\", \"eps\") in which to save the figure. The PostPlot automatically saves the figure in the results folder. The user can specify a different folder by specifying \"save_path\"=path_str or not save the figure by specifying \"save_path\"=None in param_dict, if the plot_method enables it.",
                "max": "",
                "min": "",
                "name": "save_format",
                "type": "str",
                "unit": "",
                "value": "png"
            },
            {
                "desc": "Full path to the quantity to which apply the plot_method except Output (e.g. mag.B, elec.get_Is, mag.meshsolution)",
                "max": "",
                "min": "",
                "name": "quantity",
                "type": "str",
                "unit": "",
                "value": "None"
            }
        ]
    },
    "RefCell": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "RefLine3",
            "RefQuad4",
            "RefQuad9",
            "RefSegmentP1",
            "RefTriangle3",
            "RefTriangle6"
        ],
        "desc": "Store shape functions definition in the reference element",
        "is_internal": false,
        "methods": [
            "interpolation"
        ],
        "mother": "",
        "name": "RefCell",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefCell.csv",
        "properties": [
            {
                "desc": "Precision criterion",
                "max": "",
                "min": "0.00E+00",
                "name": "epsilon",
                "type": "float",
                "unit": "-",
                "value": 0.05
            }
        ]
    },
    "RefLine3": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store line elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "get_ref_point",
            "is_inside"
        ],
        "mother": "RefCell",
        "name": "RefLine3",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefLine3.csv",
        "properties": []
    },
    "RefQuad4": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store quadrangel elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "get_ref_point",
            "is_inside"
        ],
        "mother": "RefCell",
        "name": "RefQuad4",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefQuad4.csv",
        "properties": []
    },
    "RefQuad9": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store quadrangel elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "get_ref_point",
            "is_inside"
        ],
        "mother": "RefCell",
        "name": "RefQuad9",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefQuad9.csv",
        "properties": []
    },
    "RefSegmentP1": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store segment elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "is_inside",
            "get_ref_point",
            "get_normal"
        ],
        "mother": "RefCell",
        "name": "RefSegmentP1",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefSegmentP1.csv",
        "properties": []
    },
    "RefTriangle3": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store triangle elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "get_ref_point",
            "is_inside",
            "get_cell_area",
            "get_normal"
        ],
        "mother": "RefCell",
        "name": "RefTriangle3",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefTriangle3.csv",
        "properties": []
    },
    "RefTriangle6": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store triangle elements for 2D mesh",
        "is_internal": false,
        "methods": [
            "shape_function",
            "jacobian",
            "grad_shape_function",
            "get_real_point",
            "get_ref_point",
            "is_inside"
        ],
        "mother": "RefCell",
        "name": "RefTriangle6",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/RefTriangle6.csv",
        "properties": []
    },
    "ScalarProduct": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "ScalarProductL2"
        ],
        "desc": "Store shape functions definition in the reference element",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "ScalarProduct",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/ScalarProduct.csv",
        "properties": []
    },
    "ScalarProductL2": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Store shape functions definition in the reference element",
        "is_internal": false,
        "methods": [
            "scalar_product"
        ],
        "mother": "ScalarProduct",
        "name": "ScalarProductL2",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Interpolation/ScalarProductL2.csv",
        "properties": []
    },
    "Section": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to setup a section of an Elmer Solver Input File",
        "is_internal": false,
        "methods": [
            "__delitem__",
            "__getitem__",
            "__iter__",
            "__len__",
            "__missing__",
            "__reversed__",
            "__setitem__",
            "pop",
            "keys",
            "write"
        ],
        "mother": "Elmer",
        "name": "Section",
        "package": "Elmer",
        "path": "pyleecan/Generator/ClassesRef/Elmer/Section.csv",
        "properties": [
            {
                "desc": "Name of the section",
                "max": "",
                "min": "",
                "name": "section",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "Index of a numbered section",
                "max": "",
                "min": "",
                "name": "id",
                "type": "int",
                "unit": "",
                "value": null
            },
            {
                "desc": "Section global comment",
                "max": "",
                "min": "",
                "name": "comment",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "internal dict to store the sections statements",
                "max": "",
                "min": "",
                "name": "_statements",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "internal dict to store comments on single statements",
                "max": "",
                "min": "",
                "name": "_comments",
                "type": "dict",
                "unit": "",
                "value": ""
            }
        ]
    },
    "Segment": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "A segment between two points",
        "is_internal": false,
        "methods": [
            "check",
            "comp_distance",
            "comp_length",
            "discretize",
            "draw_FEMM",
            "get_begin",
            "get_end",
            "get_middle",
            "intersect_line",
            "is_on_line",
            "plot",
            "reverse",
            "rotate",
            "scale",
            "split_half",
            "split_line",
            "translate"
        ],
        "mother": "Line",
        "name": "Segment",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Segment.csv",
        "properties": [
            {
                "desc": "begin point of the line",
                "max": "",
                "min": "",
                "name": "begin",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "end point of the line",
                "max": "",
                "min": "",
                "name": "end",
                "type": "complex",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "Shaft": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "machine shaft",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "comp_mass",
            "plot"
        ],
        "mother": "",
        "name": "Shaft",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Shaft.csv",
        "properties": [
            {
                "desc": "length of the rotor shaft [m] (used for weight & cost estimation only)",
                "max": "100",
                "min": "0",
                "name": "Lshaft",
                "type": "float",
                "unit": "m",
                "value": 0.442
            },
            {
                "desc": "Shaft's Material",
                "max": "",
                "min": "",
                "name": "mat_type",
                "type": "Material",
                "unit": "",
                "value": ""
            },
            {
                "desc": "diameter of the rotor shaft [m], used to estimate bearing diameter for friction losses",
                "max": "8",
                "min": "0",
                "name": "Drsh",
                "type": "float",
                "unit": "m",
                "value": 0.045
            }
        ]
    },
    "Simu1": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Five sequential weak coupling multi physics simulation",
        "is_internal": false,
        "methods": [
            "run_single"
        ],
        "mother": "Simulation",
        "name": "Simu1",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Simu1.csv",
        "properties": [
            {
                "desc": "Electrical module",
                "max": "",
                "min": "",
                "name": "elec",
                "type": "Electrical",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Magnetic module",
                "max": "",
                "min": "",
                "name": "mag",
                "type": "Magnetics",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Structural module",
                "max": "",
                "min": "",
                "name": "struct",
                "type": "Structural",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Force moduale",
                "max": "",
                "min": "",
                "name": "force",
                "type": "Force",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Loss moduale",
                "max": "",
                "min": "",
                "name": "loss",
                "type": "Loss",
                "unit": "-",
                "value": null
            }
        ]
    },
    "Simulation": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Simu1"
        ],
        "desc": "Abstract class for the simulation",
        "is_internal": false,
        "methods": [
            "run",
            "init_logger"
        ],
        "mother": "",
        "name": "Simulation",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Simulation.csv",
        "properties": [
            {
                "desc": "Name of the simulation",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Simulation description",
                "max": "",
                "min": "",
                "name": "desc",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Machine to simulate",
                "max": "",
                "min": "",
                "name": "machine",
                "type": "Machine",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Input of the simulation",
                "max": "",
                "min": "",
                "name": "input",
                "type": "Input",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Simulation"
            },
            {
                "desc": "Multi-simulation definition",
                "max": "",
                "min": "",
                "name": "var_simu",
                "type": "VarSimu",
                "unit": "-",
                "value": null
            },
            {
                "desc": "List of postprocessings to run on Output after the simulation",
                "max": "",
                "min": "",
                "name": "postproc_list",
                "type": "[Post]",
                "unit": "-",
                "value": []
            },
            {
                "desc": "Index of the simulation (if part of a multi-simulation)",
                "max": "",
                "min": "0",
                "name": "index",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Path to the Result folder to use (None to use default one)",
                "max": "",
                "min": "",
                "name": "path_result",
                "type": "str",
                "unit": "-",
                "value": "None"
            },
            {
                "desc": "Layer of the simulation in a multi-simulation (0 is top simulation)",
                "max": "",
                "min": "0",
                "name": "layer",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Enable to set the log console_handler to warning starting from a particular layer. layer_log_warn=2 => layer 0 and 1 info, layer 2 warning",
                "max": "",
                "min": "0",
                "name": "layer_log_warn",
                "type": "int",
                "unit": "-",
                "value": null
            }
        ]
    },
    "Slot": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Slot19",
            "SlotCirc",
            "SlotDC",
            "SlotM10",
            "SlotM11",
            "SlotM12",
            "SlotM13",
            "SlotM14",
            "SlotM15",
            "SlotM16",
            "SlotM17",
            "SlotUD",
            "SlotUD2",
            "SlotW10",
            "SlotW11",
            "SlotW12",
            "SlotW13",
            "SlotW14",
            "SlotW15",
            "SlotW16",
            "SlotW21",
            "SlotW22",
            "SlotW23",
            "SlotW24",
            "SlotW25",
            "SlotW26",
            "SlotW27",
            "SlotW28",
            "SlotW29",
            "SlotW60",
            "SlotW61",
            "SlotWLSRPM"
        ],
        "desc": "Generic class for slot (abstract)",
        "is_internal": false,
        "methods": [
            "build_geometry_active",
            "build_geometry_half_tooth",
            "check",
            "comp_angle_active_eq",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_height_opening",
            "comp_radius",
            "comp_radius_mid_active",
            "comp_surface",
            "comp_surface_active",
            "comp_width_opening",
            "get_is_stator",
            "get_name_lam",
            "get_Rbo",
            "get_surface",
            "get_surface_tooth",
            "is_outwards",
            "plot",
            "plot_active"
        ],
        "mother": "",
        "name": "Slot",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/Slot.csv",
        "properties": [
            {
                "desc": "slot number",
                "max": "1000",
                "min": "0",
                "name": "Zs",
                "type": "int",
                "unit": "-",
                "value": 36
            }
        ]
    },
    "Slot19": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "trapezoidal slot with rounded bottom",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_angle_bottom",
            "comp_height",
            "comp_surface"
        ],
        "mother": "Slot",
        "name": "Slot19",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/Slot19.csv",
        "properties": [
            {
                "desc": "Slot top width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Slot height",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Wx unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "Wx_is_rad",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "SlotCirc": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Circular slot (for notches)",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active"
        ],
        "mother": "Slot",
        "name": "SlotCirc",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotCirc.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Slot height",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.03
            }
        ]
    },
    "SlotDC": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Slot with two rods (for double squirrel cage)",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active"
        ],
        "mother": "Slot",
        "name": "SlotDC",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotDC.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Distance upper rod center to bore",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Diameter upper rod",
                "max": "",
                "min": "0",
                "name": "D1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Middle connection width",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Height between the first and second center",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Diameter upper section lower rod",
                "max": "",
                "min": "0",
                "name": "D2",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Length of lower rod",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Radius lower section lower rod",
                "max": "",
                "min": "0",
                "name": "R3",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM10": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Rectangular Slot with Rectangular magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM10",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM10.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM11": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Polar Slot with Polar magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM11",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM11.csv",
        "properties": [
            {
                "desc": "Slot isthmus angular width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet angular width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM12": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Rectangular Slot with Rectangular magnet with polar top",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM12",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM12.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM13": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Rectangular Slot with Rectangular magnet with circular top",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM13",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM13.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Radius of the magnet top",
                "max": "",
                "min": "0",
                "name": "Rtopm",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM14": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Polar Slot with Polar magnet with circular top",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM14",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM14.csv",
        "properties": [
            {
                "desc": "Slot isthmus angular width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet angular width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Radius of the magnet top",
                "max": "",
                "min": "0",
                "name": "Rtopm",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM15": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "single magnet with polar base and curved-top shape and parallel sides",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM15",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM15.csv",
        "properties": [
            {
                "desc": "Slot isthmus angular width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Magnet width",
                "max": "",
                "min": "0",
                "name": "Wmag",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Magnet Height",
                "max": "",
                "min": "0",
                "name": "Hmag",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Radius of the magnet top",
                "max": "",
                "min": "0",
                "name": "Rtopm",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM16": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Rectangular Slot with isthmus for Rectangular magnet",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM16",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM16.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot Width",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot Height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotM17": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Full rotor magnet",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotM17",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotM17.csv",
        "properties": []
    },
    "SlotUD": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "\"User defined\" Slot from a line list. ",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "set_from_point_list",
            "get_surface_active",
            "check"
        ],
        "mother": "Slot",
        "name": "SlotUD",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotUD.csv",
        "properties": [
            {
                "desc": "list of line to draw the edges of the slot",
                "max": "",
                "min": "",
                "name": "line_list",
                "type": "[Line]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Index of the first line to include in the winding",
                "max": "",
                "min": "",
                "name": "wind_begin_index",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Index of the last line to include in the winding",
                "max": "",
                "min": "",
                "name": "wind_end_index",
                "type": "int",
                "unit": "-",
                "value": null
            },
            {
                "desc": "0 to close winding with Segment, 1 for Arc1",
                "max": "1",
                "min": "0",
                "name": "type_line_wind",
                "type": "int",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "SlotUD2": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "\"User defined\" Slot from a line list and a surface",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "get_surface_active",
            "check"
        ],
        "mother": "Slot",
        "name": "SlotUD2",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotUD2.csv",
        "properties": [
            {
                "desc": "list of line to draw the edges of the slot",
                "max": "",
                "min": "",
                "name": "line_list",
                "type": "[Line]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Active surface of the Slot",
                "max": "",
                "min": "",
                "name": "active_surf",
                "type": "Surface",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "SlotW10": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Open Rectangular or trapezoidal slot with wedge",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "get_H1",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW10",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW10.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot wedge radial height or wedge angle .",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0.0015
            },
            {
                "desc": "Slot wedge width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.014
            },
            {
                "desc": "Slot height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.0325
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "H1 unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "H1_is_rad",
                "type": "bool",
                "unit": "",
                "value": 0
            }
        ]
    },
    "SlotW11": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_H1",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW11",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW11.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "height or angle  (See Schematics)",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0
            },
            {
                "desc": "H1 unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "H1_is_rad",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Slot top width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Slot height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Slot bottom radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotW12": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW12",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW12.csv",
        "properties": [
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot middle height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0
            },
            {
                "desc": "Wedges radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot bottom radius",
                "max": "",
                "min": "0",
                "name": "R2",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotW13": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Open Rectangular or trapezoidal slot with wedge",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "get_H1",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW13",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW13.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot wedge radial height or wedge angle .",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0.0015
            },
            {
                "desc": "Slot wedge width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.014
            },
            {
                "desc": "Slot height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.0325
            },
            {
                "desc": "Slot width below wedge ",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "H1 unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "H1_is_rad",
                "type": "bool",
                "unit": "",
                "value": 0
            }
        ]
    },
    "SlotW14": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW14",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW14.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot intermediate height.",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.0015
            },
            {
                "desc": "Tooth height",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            }
        ]
    },
    "SlotW15": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW15",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW15.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot intermediate height.",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.0015
            },
            {
                "desc": "Slot height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Top radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Bottom radius",
                "max": "",
                "min": "0",
                "name": "R2",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotW16": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW16",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW16.csv",
        "properties": [
            {
                "desc": "Slot isthmus angular width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.0122
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Top radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "SlotW21": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "semi-closed trapezoidal without fillet without wedge (flat bottom)",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_H1",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW21",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW21.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "height or angle  (See Schematics)",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0
            },
            {
                "desc": "H1 unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "H1_is_rad",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "Slot top width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Slot height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            }
        ]
    },
    "SlotW22": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "semi-closed orthoradial without fillet without wedge",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW22",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW22.csv",
        "properties": [
            {
                "desc": "Slot isthmus orthoradial angular width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "rad",
                "value": 0.043633
            },
            {
                "desc": "Slot isthmus radial height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.006
            },
            {
                "desc": "Slot radial height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.04
            },
            {
                "desc": "Angle between slot edges",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "rad",
                "value": 0.08725
            }
        ]
    },
    "SlotW23": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "semi-closed trapezoidal without fillet without wedge (rounded bottom)",
        "is_internal": false,
        "methods": [
            "_comp_W",
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW23",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW23.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "height or angle  (See Schematics)",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m/rad",
                "value": 0
            },
            {
                "desc": "Slot top width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Slot height below wedge ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "H1 unit, 0 for m, 1 for rad",
                "max": "",
                "min": "",
                "name": "H1_is_rad",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True: use W3 to define the slot, False: use W2 and W1",
                "max": "",
                "min": "",
                "name": "is_cstt_tooth",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "SlotW24": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW24",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW24.csv",
        "properties": [
            {
                "desc": "Teeth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.003
            }
        ]
    },
    "SlotW25": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW25",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW25.csv",
        "properties": [
            {
                "desc": "Teeth bottom width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot bottom height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Teeth top width",
                "max": "",
                "min": "0",
                "name": "W4",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot top height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.003
            }
        ]
    },
    "SlotW26": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW26",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW26.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot depth ",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot edge radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot top radius",
                "max": "",
                "min": "0",
                "name": "R2",
                "type": "float",
                "unit": "m",
                "value": 0.003
            }
        ]
    },
    "SlotW27": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "semi-closed trapezoidal without fillet without wedge (flat bottom)",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW27",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW27.csv",
        "properties": [
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot first part height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Slot second part height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Slot top width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.013
            },
            {
                "desc": "Slot middle width",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.01
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "If True, split the winding on the  trapezium bases. Else split at the middle height as usual",
                "max": "",
                "min": "",
                "name": "is_trap_wind",
                "type": "bool",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "SlotW28": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "get_surface_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW28",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW28.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.0122
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot edge radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.005
            },
            {
                "desc": "Tooth height",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.003
            }
        ]
    },
    "SlotW29": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active",
            "plot_schematics"
        ],
        "mother": "Slot",
        "name": "SlotW29",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW29.csv",
        "properties": [
            {
                "desc": "Slot isthmus width.",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.05
            },
            {
                "desc": "Slot isthmus height.",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.001
            },
            {
                "desc": "Slot middle height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.0015
            },
            {
                "desc": "Slot middle width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.015
            },
            {
                "desc": "Slot bottom height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.03
            },
            {
                "desc": "Slot bottom width.",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.2
            }
        ]
    },
    "SlotW60": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "0"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active"
        ],
        "mother": "Slot",
        "name": "SlotW60",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW60.csv",
        "properties": [
            {
                "desc": "Pole top width",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Pole bottom width",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.03
            },
            {
                "desc": "Pole top height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.05
            },
            {
                "desc": "Pole bottom height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.15
            },
            {
                "desc": "Pole top radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.03
            },
            {
                "desc": "Top Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Bottom Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "H4",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Edge Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0
            }
        ]
    },
    "SlotW61": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "0"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check",
            "comp_angle_opening",
            "comp_height",
            "comp_height_active",
            "comp_surface",
            "comp_surface_active",
            "get_surface_active"
        ],
        "mother": "Slot",
        "name": "SlotW61",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotW61.csv",
        "properties": [
            {
                "desc": "Pole top width",
                "max": "",
                "min": "0",
                "name": "W0",
                "type": "float",
                "unit": "m",
                "value": 0.314
            },
            {
                "desc": "Pole top width",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.02
            },
            {
                "desc": "Pole bottom width",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 0.03
            },
            {
                "desc": "Pole top height",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 0.003
            },
            {
                "desc": "Pole intermediate height",
                "max": "",
                "min": "0",
                "name": "H1",
                "type": "float",
                "unit": "m",
                "value": 0.05
            },
            {
                "desc": "Pole bottom height",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.15
            },
            {
                "desc": "Top Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Bottom Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "H4",
                "type": "float",
                "unit": "m",
                "value": 0
            },
            {
                "desc": "Edge Distance Ploe-coil ",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0
            }
        ]
    },
    "SlotWLSRPM": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "IS_SYMMETRICAL",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Open Rectangular or trapezoidal slot with wedge",
        "is_internal": false,
        "methods": [
            "_comp_point_coordinate",
            "build_geometry",
            "build_geometry_active",
            "check"
        ],
        "mother": "Slot",
        "name": "SlotWLSRPM",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/SlotWLSRPM.csv",
        "properties": [
            {
                "desc": "Slot bottom side width.",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 0.008
            },
            {
                "desc": "Tooth width",
                "max": "",
                "min": "0",
                "name": "W3",
                "type": "float",
                "unit": "m",
                "value": 0.0116
            },
            {
                "desc": "Slot height ",
                "max": "",
                "min": "0",
                "name": "H2",
                "type": "float",
                "unit": "m",
                "value": 0.0148
            },
            {
                "desc": "Top radius",
                "max": "",
                "min": "0",
                "name": "R1",
                "type": "float",
                "unit": "m",
                "value": 0.00075
            },
            {
                "desc": "damper winding height",
                "max": "",
                "min": "0",
                "name": "H3",
                "type": "float",
                "unit": "m",
                "value": 0.001
            }
        ]
    },
    "Solution": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Mode",
            "SolutionData",
            "SolutionMat",
            "SolutionVector"
        ],
        "desc": "Abstract class for solution related classes.",
        "is_internal": false,
        "methods": [],
        "mother": "",
        "name": "Solution",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/Solution.csv",
        "properties": [
            {
                "desc": "Type of cell (Point, Segment2, Triangle3, etc.)",
                "max": "",
                "min": "",
                "name": "type_cell",
                "type": "str",
                "unit": "-",
                "value": "triangle"
            },
            {
                "desc": "Label to identify the solution",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "-",
                "value": "None"
            },
            {
                "desc": "Dimension of the physical problem",
                "max": "3",
                "min": "1",
                "name": "dimension",
                "type": "int",
                "unit": "",
                "value": 2
            }
        ]
    },
    "SolutionData": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Define a Solution with SciDataTool objects.",
        "is_internal": false,
        "methods": [
            "get_field",
            "get_axes_list",
            "get_solution"
        ],
        "mother": "Solution",
        "name": "SolutionData",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/SolutionData.csv",
        "properties": [
            {
                "desc": "Data object containing the numerical values of a solution. One of the axis must be \"Indices\", a list of indices. If the solution is a vector, one of the axis must be \"Direction\", values ['x','y'] for example.",
                "max": "",
                "min": "",
                "name": "field",
                "type": "SciDataTool.Classes.DataND.DataND",
                "unit": "-",
                "value": "None"
            }
        ]
    },
    "SolutionMat": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Mode"
        ],
        "desc": "Define a Solution with ndarray object.",
        "is_internal": false,
        "methods": [
            "get_field",
            "get_axes_list",
            "get_solution"
        ],
        "mother": "Solution",
        "name": "SolutionMat",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/SolutionMat.csv",
        "properties": [
            {
                "desc": "Matrix/Vector of the numerical values of the solutions.",
                "max": "",
                "min": "",
                "name": "field",
                "type": "ndarray",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Indices of loaded cells. Set to None if all cells are loaded",
                "max": "",
                "min": "",
                "name": "indice",
                "type": "ndarray",
                "unit": "-",
                "value": null
            },
            {
                "desc": "List of axis names (e.g. \"time\", \"direction\")",
                "max": "",
                "min": "",
                "name": "axis_name",
                "type": "list",
                "unit": "-",
                "value": null
            },
            {
                "desc": "List of axis sizes",
                "max": "",
                "min": "",
                "name": "axis_size",
                "type": "list",
                "unit": "-",
                "value": null
            }
        ]
    },
    "SolutionVector": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Define a Solution with SciDataTool objects.",
        "is_internal": false,
        "methods": [
            "get_field",
            "get_axes_list",
            "get_solution"
        ],
        "mother": "Solution",
        "name": "SolutionVector",
        "package": "Mesh",
        "path": "pyleecan/Generator/ClassesRef/Mesh/SolutionVector.csv",
        "properties": [
            {
                "desc": "Data object containing the numerical values of a solution. One of the axis must be \"Indices\", a list of indices. If the solution is a vector, one of the axis must be \"Direction\", values ['x','y'] for example.",
                "max": "",
                "min": "",
                "name": "field",
                "type": "SciDataTool.Classes.VectorField.VectorField",
                "unit": "-",
                "value": "None"
            }
        ]
    },
    "SolverInputFile": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Class to setup the Elmer Solver Input File",
        "is_internal": false,
        "methods": [
            "write"
        ],
        "mother": "Elmer",
        "name": "SolverInputFile",
        "package": "Elmer",
        "path": "pyleecan/Generator/ClassesRef/Elmer/SolverInputFile.csv",
        "properties": [
            {
                "desc": "List of SIF sections",
                "max": "",
                "min": "",
                "name": "sections",
                "type": "list",
                "unit": "",
                "value": []
            }
        ]
    },
    "StructElmer": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Structural module: FEA model with Elmer",
        "is_internal": false,
        "methods": [
            "run",
            "get_meshsolution",
            "get_path_save_fea",
            "solve_FEA",
            "gen_mesh",
            "gen_case",
            "process_mesh"
        ],
        "mother": "Structural",
        "name": "StructElmer",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/StructElmer.csv",
        "properties": [
            {
                "desc": "global coefficient to adjust mesh fineness in FEMM (1 : default , > 1 : finner , < 1 : less fine)",
                "max": "",
                "min": "",
                "name": "Kmesh_fineness",
                "type": "float",
                "unit": "",
                "value": 1
            },
            {
                "desc": "Name of the path to save the FEA model",
                "max": "",
                "min": "",
                "name": "path_name",
                "type": "str",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To enforce user-defined values for FEA main parameters ",
                "max": "",
                "min": "",
                "name": "FEA_dict_enforced",
                "type": "dict",
                "unit": "",
                "value": ""
            },
            {
                "desc": "To save FEA mesh for latter post-procesing (only possible with is_save_FEA set to True)",
                "max": "",
                "min": "",
                "name": "is_get_mesh",
                "type": "bool",
                "unit": "",
                "value": 0
            },
            {
                "desc": "To save FEA mesh and solution in .vtu file",
                "max": "",
                "min": "",
                "name": "is_save_FEA",
                "type": "bool",
                "unit": "",
                "value": 1
            },
            {
                "desc": "List of dictionary to apply transformation on the machine surfaces. Key: label (to select the surface), type (rotate or translate), value (alpha or delta)",
                "max": "",
                "min": "",
                "name": "transform_list",
                "type": "list",
                "unit": "",
                "value": []
            },
            {
                "desc": "Switch to include magents in the structural simulation",
                "max": "",
                "min": "",
                "name": "include_magnets",
                "type": "bool",
                "unit": "",
                "value": 1
            }
        ]
    },
    "Structural": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "StructElmer"
        ],
        "desc": "Structural module abstract object",
        "is_internal": false,
        "methods": [
            "run",
            "comp_axes"
        ],
        "mother": "",
        "name": "Structural",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/Structural.csv",
        "properties": [
            {
                "desc": "Name of the logger to use",
                "max": "",
                "min": "",
                "name": "logger_name",
                "type": "str",
                "unit": "-",
                "value": "Pyleecan.Structural"
            }
        ]
    },
    "SurfLine": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "SurfLine defined by list of lines that delimit it, label and point reference.",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_point_ref",
            "comp_surface",
            "discretize",
            "get_lines",
            "get_patches",
            "plot_lines",
            "rotate",
            "scale",
            "translate"
        ],
        "mother": "Surface",
        "name": "SurfLine",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/SurfLine.csv",
        "properties": [
            {
                "desc": "List of Lines ",
                "max": "",
                "min": "",
                "name": "line_list",
                "type": "[Line]",
                "unit": "-",
                "value": []
            }
        ]
    },
    "SurfRing": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "SurfRing is a surface between two closed surfaces (lamination surfaces for instance)",
        "is_internal": false,
        "methods": [
            "get_lines",
            "rotate",
            "translate",
            "check",
            "comp_length",
            "get_patches",
            "discretize",
            "comp_surface",
            "plot_lines",
            "comp_point_ref"
        ],
        "mother": "Surface",
        "name": "SurfRing",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/SurfRing.csv",
        "properties": [
            {
                "desc": "Outter surface",
                "max": "",
                "min": "",
                "name": "out_surf",
                "type": "Surface",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Inner surface",
                "max": "",
                "min": "",
                "name": "in_surf",
                "type": "Surface",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "Surface": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "Circle",
            "PolarArc",
            "SurfLine",
            "SurfRing",
            "Trapeze"
        ],
        "desc": "SurfLine define by list of lines that delimit it, label and point reference.",
        "is_internal": false,
        "methods": [
            "comp_mesh_dict",
            "draw_FEMM",
            "plot",
            "split_line"
        ],
        "mother": "",
        "name": "Surface",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Surface.csv",
        "properties": [
            {
                "desc": "Center of symmetry",
                "max": "",
                "min": "",
                "name": "point_ref",
                "type": "complex",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Label of the surface",
                "max": "",
                "min": "",
                "name": "label",
                "type": "str",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "Trapeze": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Trapeze defined by  the center of symmetry(point_ref), the label, the polar angle, the height and the big and small weight",
        "is_internal": false,
        "methods": [
            "check",
            "comp_length",
            "comp_surface",
            "discretize",
            "get_lines",
            "get_patches",
            "rotate",
            "translate",
            "comp_point_ref"
        ],
        "mother": "Surface",
        "name": "Trapeze",
        "package": "Geometry",
        "path": "pyleecan/Generator/ClassesRef/Geometry/Trapeze.csv",
        "properties": [
            {
                "desc": "the height of the Trapeze",
                "max": "",
                "min": "0",
                "name": "height",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "the big base of Trapeze",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "the small base of the Trapeze",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 1
            }
        ]
    },
    "Unit": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "",
        "is_internal": false,
        "methods": [
            "get_m",
            "get_m2",
            "get_m_name",
            "get_m2_name",
            "set_m",
            "set_m2"
        ],
        "mother": "",
        "name": "Unit",
        "package": "GUI_Option",
        "path": "pyleecan/Generator/ClassesRef/GUI_Option/Unit.csv",
        "properties": [
            {
                "desc": "0: use m, 1: use mm",
                "max": "1",
                "min": "0",
                "name": "unit_m",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "0: use rad, 1: use deg",
                "max": "1",
                "min": "0",
                "name": "unit_rad",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "0: use m^2, 1: use mm^2",
                "max": "1",
                "min": "0",
                "name": "unit_m2",
                "type": "int",
                "unit": "-",
                "value": 0
            }
        ]
    },
    "VarLoad": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "NAME",
                "value": "\"Variable Load\""
            }
        ],
        "daughters": [
            "VarLoadCurrent"
        ],
        "desc": "Abstract class to generate multi-simulation by changing the operating point",
        "is_internal": false,
        "methods": [],
        "mother": "VarSimu",
        "name": "VarLoad",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/VarLoad.csv",
        "properties": []
    },
    "VarLoadCurrent": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Generate a multisimulation with InputCurrent at variable operating point",
        "is_internal": false,
        "methods": [
            "get_input_list",
            "generate_simulation_list",
            "check_param",
            "get_elec_datakeeper"
        ],
        "mother": "VarLoad",
        "name": "VarLoadCurrent",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/VarLoadCurrent.csv",
        "properties": [
            {
                "desc": "Operating point matrix (N0,I0,Phi0,T,P) or (N0,Id,Iq,T,P) ",
                "max": "",
                "min": "",
                "name": "OP_matrix",
                "type": "ndarray",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Select which kind of OP_matrix is used 0: (N0,I0,Phi0,T,P), 1:(N0,Id,Iq,T,P) ",
                "max": "1",
                "min": "0",
                "name": "type_OP_matrix",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True if the Torque is defined in OP_matrix",
                "max": "",
                "min": "",
                "name": "is_torque",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "True if the Power is defined in OP_matrix",
                "max": "",
                "min": "",
                "name": "is_power",
                "type": "bool",
                "unit": "",
                "value": false
            }
        ]
    },
    "VarParam": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "NAME",
                "value": "\"Parameter Sweep\""
            }
        ],
        "daughters": [],
        "desc": "Handle multisimulation by varying parameters",
        "is_internal": false,
        "methods": [
            "check_param",
            "generate_simulation_list",
            "get_simu_number"
        ],
        "mother": "VarSimu",
        "name": "VarParam",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/VarParam.csv",
        "properties": [
            {
                "desc": "List containing ParamSetter to define every simulation",
                "max": "",
                "min": "",
                "name": "paramexplorer_list",
                "type": "[ParamExplorer]",
                "unit": "-",
                "value": ""
            }
        ]
    },
    "VarSimu": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [
            "VarLoad",
            "VarLoadCurrent",
            "VarParam"
        ],
        "desc": "Abstract class for the multi-simulation",
        "is_internal": false,
        "methods": [
            "run",
            "set_reused_data",
            "check_param",
            "generate_simulation_list",
            "gen_datakeeper_list",
            "get_elec_datakeeper",
            "get_mag_datakeeper",
            "get_force_datakeeper"
        ],
        "mother": "",
        "name": "VarSimu",
        "package": "Simulation",
        "path": "pyleecan/Generator/ClassesRef/Simulation/VarSimu.csv",
        "properties": [
            {
                "desc": "Name of the multi-simulation",
                "max": "",
                "min": "",
                "name": "name",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Multi-simulation description",
                "max": "",
                "min": "",
                "name": "desc",
                "type": "str",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "List containing DataKeepers to extract VarSimu results ",
                "max": "",
                "min": "",
                "name": "datakeeper_list",
                "type": "[DataKeeper]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "True to store every output in a list",
                "max": "",
                "min": "",
                "name": "is_keep_all_output",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "Stop the multi-simulation if a simulation fails ",
                "max": "",
                "min": "",
                "name": "stop_if_error",
                "type": "bool",
                "unit": "-",
                "value": false
            },
            {
                "desc": "Multi-simulation of a Multi-simulation definition",
                "max": "",
                "min": "",
                "name": "var_simu",
                "type": "VarSimu",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Number of simulations",
                "max": "",
                "min": "",
                "name": "nb_simu",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True to reuse the femm file for each simulation (draw the machine only once, MagFEMM only)",
                "max": "",
                "min": "",
                "name": "is_reuse_femm_file",
                "type": "bool",
                "unit": "-",
                "value": 1
            },
            {
                "desc": "List of post-processing to run on XOutput after the multisimulation",
                "max": "",
                "min": "",
                "name": "postproc_list",
                "type": "[Post]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "If not None, replace the reference simulation postproc_list in each generated simulation (run before datakeeper)",
                "max": "",
                "min": "",
                "name": "pre_keeper_postproc_list",
                "type": "[Post]",
                "unit": "-",
                "value": null
            },
            {
                "desc": "List of post-processing to run on output after each simulation (except reference one) after the datakeeper.",
                "max": "",
                "min": "",
                "name": "post_keeper_postproc_list",
                "type": "[Post]",
                "unit": "-",
                "value": null
            }
        ]
    },
    "VentilationCirc": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Circular axial ventilation duct",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_radius",
            "comp_surface",
            "get_center"
        ],
        "mother": "Hole",
        "name": "VentilationCirc",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/VentilationCirc.csv",
        "properties": [
            {
                "desc": "Shift angle of the holes around circumference",
                "max": "6.29",
                "min": "0",
                "name": "Alpha0",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Hole diameters",
                "max": "",
                "min": "0",
                "name": "D0",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Diameter of the hole centers",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 1
            }
        ]
    },
    "VentilationPolar": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Polar axial ventilation duct",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_radius",
            "comp_surface",
            "get_center"
        ],
        "mother": "Hole",
        "name": "VentilationPolar",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/VentilationPolar.csv",
        "properties": [
            {
                "desc": "Shift angle of the hole around circumference",
                "max": "6.29",
                "min": "0",
                "name": "Alpha0",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Height of the hole",
                "max": "",
                "min": "0",
                "name": "D0",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Radius of the bottom of Hole",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Hole angular width",
                "max": "6.29",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "rad",
                "value": 1
            }
        ]
    },
    "VentilationTrap": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "Trapezoidal axial ventilation ducts",
        "is_internal": false,
        "methods": [
            "build_geometry",
            "check",
            "comp_radius",
            "comp_surface",
            "get_center"
        ],
        "mother": "Hole",
        "name": "VentilationTrap",
        "package": "Slot",
        "path": "pyleecan/Generator/ClassesRef/Slot/VentilationTrap.csv",
        "properties": [
            {
                "desc": "Shift angle of the hole around circumference",
                "max": "6.29",
                "min": "0",
                "name": "Alpha0",
                "type": "float",
                "unit": "rad",
                "value": 0
            },
            {
                "desc": "Hole height",
                "max": "",
                "min": "0",
                "name": "D0",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Radius of the hole bottom",
                "max": "",
                "min": "0",
                "name": "H0",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Hole small basis",
                "max": "",
                "min": "0",
                "name": "W1",
                "type": "float",
                "unit": "m",
                "value": 1
            },
            {
                "desc": "Hole large basis",
                "max": "",
                "min": "0",
                "name": "W2",
                "type": "float",
                "unit": "m",
                "value": 1
            }
        ]
    },
    "Winding": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "NAME",
                "value": "\"Star of slots\""
            }
        ],
        "daughters": [
            "WindingSC",
            "WindingUD"
        ],
        "desc": "Winding class generating connection matrix using Star of slots method (coupling with SWAT-EM)",
        "is_internal": false,
        "methods": [
            "comp_connection_mat",
            "comp_length_endwinding",
            "comp_Ncspc",
            "comp_Ntsp",
            "comp_periodicity",
            "comp_phasor_angle",
            "comp_winding_factor",
            "get_connection_mat",
            "get_dim_wind",
            "get_periodicity",
            "export_to_csv",
            "clean"
        ],
        "mother": "",
        "name": "Winding",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/Winding.csv",
        "properties": [
            {
                "desc": "1 to reverse the default winding algorithm along the airgap (c, b, a instead of a, b, c along the trigonometric direction)",
                "max": "",
                "min": "",
                "name": "is_reverse_wind",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "0 not to change the stator winding connection matrix built by pyleecan number of slots to shift the coils obtained with pyleecan winding algorithm (a, b, c becomes b, c, a with Nslot_shift_wind1=1)",
                "max": "",
                "min": "",
                "name": "Nslot_shift_wind",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "number of phases ",
                "max": "100",
                "min": "0",
                "name": "qs",
                "type": "int",
                "unit": "-",
                "value": 3
            },
            {
                "desc": "number of turns per coil",
                "max": "1000",
                "min": "1",
                "name": "Ntcoil",
                "type": "int",
                "unit": "-",
                "value": 7
            },
            {
                "desc": "number of parallel circuits per phase (maximum p)",
                "max": "1000",
                "min": "1",
                "name": "Npcp",
                "type": "int",
                "unit": "-",
                "value": 2
            },
            {
                "desc": "Winding connection : 0 star (Y), 1 triangle (delta), -1 no connection",
                "max": "1",
                "min": "-1",
                "name": "type_connection",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "pole pairs number",
                "max": "100",
                "min": "1",
                "name": "p",
                "type": "int",
                "unit": "-",
                "value": 3
            },
            {
                "desc": "straight length of the conductors outside the lamination before the curved part of winding overhang [m] - can be negative to tune the average turn length ",
                "max": "100",
                "min": "0",
                "name": "Lewout",
                "type": "float",
                "unit": "m",
                "value": 0.015
            },
            {
                "desc": "Winding's conductor",
                "max": "",
                "min": "",
                "name": "conductor",
                "type": "Conductor",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Coil pitch (or coil span)",
                "max": "",
                "min": "",
                "name": "coil_pitch",
                "type": "int",
                "unit": "",
                "value": 1
            },
            {
                "desc": "Winding matrix calculated with Star of slots (from SWAT_EM package)",
                "max": "",
                "min": "",
                "name": "wind_mat",
                "type": "ndarray",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Number of layers per slots",
                "max": "",
                "min": "1",
                "name": "Nlayer",
                "type": "int",
                "unit": "",
                "value": 1
            },
            {
                "desc": "Number of spatial periods of the winding",
                "max": "",
                "min": "1",
                "name": "per_a",
                "type": "int",
                "unit": "",
                "value": null
            },
            {
                "desc": "True if the winding is anti-periodic over space",
                "max": "",
                "min": "",
                "name": "is_aper_a",
                "type": "bool",
                "unit": "",
                "value": null
            },
            {
                "desc": "End Winding's definition",
                "max": "",
                "min": "",
                "name": "end_winding",
                "type": "EndWinding",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "1 to reverse the layers (rad from 0 to Nrad-1 => Nrad-1 to 0)",
                "max": "",
                "min": "",
                "name": "is_reverse_layer",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "1 to change the layer from radial to tangential or tangential to radial",
                "max": "",
                "min": "",
                "name": "is_change_layer",
                "type": "bool",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "True to permute phase B and phase C",
                "max": "",
                "min": "",
                "name": "is_permute_B_C",
                "type": "bool",
                "unit": "",
                "value": 0
            }
        ]
    },
    "WindingSC": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "NAME",
                "value": "\"short-circuit\""
            }
        ],
        "daughters": [],
        "desc": "short-circuit winding (e.g. squirrel cage type)",
        "is_internal": false,
        "methods": [
            "comp_connection_mat",
            "get_dim_wind"
        ],
        "mother": "Winding",
        "name": "WindingSC",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/WindingSC.csv",
        "properties": []
    },
    "WindingUD": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            },
            {
                "name": "NAME",
                "value": "\"User defined\""
            }
        ],
        "daughters": [],
        "desc": "User defined winding",
        "is_internal": false,
        "methods": [
            "init_as_CW1L",
            "init_as_CW2LR",
            "init_as_CW2LT",
            "init_as_DWL",
            "import_from_csv"
        ],
        "mother": "Winding",
        "name": "WindingUD",
        "package": "Machine",
        "path": "pyleecan/Generator/ClassesRef/Machine/WindingUD.csv",
        "properties": []
    },
    "XOutput": {
        "constants": [
            {
                "name": "VERSION",
                "value": "1"
            }
        ],
        "daughters": [],
        "desc": "XOutput object: gather all the outputs of all the modules for multiple simulations",
        "is_internal": false,
        "methods": [
            "__delitem__",
            "__getitem__",
            "__iter__",
            "__len__",
            "__missing__",
            "__next__",
            "__reversed__",
            "__setitem__",
            "append",
            "count",
            "get_param_simu",
            "get_paramexplorer",
            "get_pareto_index",
            "get_simu",
            "get_symbol_list",
            "get_xoutput_ref",
            "insert",
            "items",
            "keys",
            "plot_generation",
            "plot_multi",
            "plot_pareto",
            "pop",
            "print_memory",
            "remove"
        ],
        "mother": "Output",
        "name": "XOutput",
        "package": "Output",
        "path": "pyleecan/Generator/ClassesRef/Output/XOutput.csv",
        "properties": [
            {
                "desc": "List containing ParamExplorer",
                "max": "",
                "min": "",
                "name": "paramexplorer_list",
                "type": "[ParamExplorer]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "List containing Output (or Xoutput) for each simulation",
                "max": "",
                "min": "",
                "name": "output_list",
                "type": "[Output]",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "dictionary containing DataKeeper",
                "max": "",
                "min": "",
                "name": "xoutput_dict",
                "type": "{DataKeeper}",
                "unit": "-",
                "value": ""
            },
            {
                "desc": "Number of simulations excluding reference simulation",
                "max": "",
                "min": "0",
                "name": "nb_simu",
                "type": "int",
                "unit": "-",
                "value": 0
            },
            {
                "desc": "Xoutput (or Output) of the reference simulation (only if is_keep_all_output is True and not included in output_list)",
                "max": "",
                "min": "",
                "name": "xoutput_ref",
                "type": "Output",
                "unit": "-",
                "value": null
            },
            {
                "desc": "Index of the Xoutput (or Output) of the reference simulation in the output_list (only if is_keep_all_output is True)",
                "max": "",
                "min": "",
                "name": "xoutput_ref_index",
                "type": "int",
                "unit": "-",
                "value": null
            }
        ]
    }
}